
lab4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000014  00800100  00000c90  00000d24  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000c90  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000055  00800114  00800114  00000d38  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000d38  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000120  00000000  00000000  00000d94  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000009a3  00000000  00000000  00000eb4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000003c9  00000000  00000000  00001857  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000009d2  00000000  00000000  00001c20  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000002e4  00000000  00000000  000025f4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000039e  00000000  00000000  000028d8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000006ce  00000000  00000000  00002c76  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000f0  00000000  00000000  00003344  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	fa c2       	rjmp	.+1524   	; 0x61a <__vector_9>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	62 c0       	rjmp	.+196    	; 0xf6 <__vector_12>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	c2 c0       	rjmp	.+388    	; 0x1ee <__vector_26>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e0 e9       	ldi	r30, 0x90	; 144
  a0:	fc e0       	ldi	r31, 0x0C	; 12
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a4 31       	cpi	r26, 0x14	; 20
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a4 e1       	ldi	r26, 0x14	; 20
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a9 36       	cpi	r26, 0x69	; 105
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	6c d1       	rcall	.+728    	; 0x39c <main>
  c4:	e3 c5       	rjmp	.+3014   	; 0xc8c <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <timer_init>:
int mins = 30;
int secs = 0;
/// Initialize the timers
void timer_init(void) {
	// set up timer 1: WGM1 bits = 0100, CS = 101, set OCR1A, set TIMSK
	TCCR1A = 0b00000000;		// WGM1[1:0]=00
  c8:	1f bc       	out	0x2f, r1	; 47
	TCCR1B = 0b00001101;		// WGM1[3:2]=01, CS=101
  ca:	3d e0       	ldi	r19, 0x0D	; 13
  cc:	3e bd       	out	0x2e, r19	; 46
	OCR1A = CLOCK_COUNT - 1; 	// counter threshold for clock
  ce:	88 e0       	ldi	r24, 0x08	; 8
  d0:	9d e3       	ldi	r25, 0x3D	; 61
  d2:	9b bd       	out	0x2b, r25	; 43
  d4:	8a bd       	out	0x2a, r24	; 42
	TIMSK = _BV(OCIE1A);		// enable OC interrupt, timer 1, channel A
  d6:	20 e1       	ldi	r18, 0x10	; 16
  d8:	27 bf       	out	0x37, r18	; 55

	// set up timer 3: WGM1 bits = 0100, CS = 101, set OCR3A, set TIMSK
	TCCR3A = 0b00000000;		// WGM1[1:0]=00
  da:	10 92 8b 00 	sts	0x008B, r1
	TCCR3B = 0b00001101;		// WGM1[3:2]=01, CS=101
  de:	30 93 8a 00 	sts	0x008A, r19
	OCR3A = CHECK_COUNT - 1; 	// counter threshold for checking push button
  e2:	84 e3       	ldi	r24, 0x34	; 52
  e4:	9c e0       	ldi	r25, 0x0C	; 12
  e6:	90 93 87 00 	sts	0x0087, r25
  ea:	80 93 86 00 	sts	0x0086, r24
	ETIMSK = _BV(OCIE3A);		// enable OC interrupt, timer 3, channel A
  ee:	20 93 7d 00 	sts	0x007D, r18

	sei();
  f2:	78 94       	sei
  f4:	08 95       	ret

000000f6 <__vector_12>:
/**
 * Timer interrupt source 1: the function will be called every one second
 * (you need define CLOCK_COUNT correctly) 
 */

ISR (TIMER1_COMPA_vect) {
  f6:	1f 92       	push	r1
  f8:	0f 92       	push	r0
  fa:	0f b6       	in	r0, 0x3f	; 63
  fc:	0f 92       	push	r0
  fe:	11 24       	eor	r1, r1
 100:	8f 93       	push	r24
 102:	9f 93       	push	r25
	//

	// Be sure to correctly initialize CLOCK_COUNT and CHECK_COUNT so these interrupts 
	// get called at the right frequency.
	
	secs++;
 104:	80 91 14 01 	lds	r24, 0x0114
 108:	90 91 15 01 	lds	r25, 0x0115
 10c:	01 96       	adiw	r24, 0x01	; 1
	if(secs >= 60){
 10e:	8c 33       	cpi	r24, 0x3C	; 60
 110:	91 05       	cpc	r25, r1
 112:	2c f4       	brge	.+10     	; 0x11e <__vector_12+0x28>
	//

	// Be sure to correctly initialize CLOCK_COUNT and CHECK_COUNT so these interrupts 
	// get called at the right frequency.
	
	secs++;
 114:	90 93 15 01 	sts	0x0115, r25
 118:	80 93 14 01 	sts	0x0114, r24
 11c:	0d c0       	rjmp	.+26     	; 0x138 <__vector_12+0x42>
	if(secs >= 60){
		secs = 0;
 11e:	10 92 15 01 	sts	0x0115, r1
 122:	10 92 14 01 	sts	0x0114, r1
		mins++;
 126:	80 91 00 01 	lds	r24, 0x0100
 12a:	90 91 01 01 	lds	r25, 0x0101
 12e:	01 96       	adiw	r24, 0x01	; 1
 130:	90 93 01 01 	sts	0x0101, r25
 134:	80 93 00 01 	sts	0x0100, r24
	}
	if(secs < 0){
 138:	80 91 14 01 	lds	r24, 0x0114
 13c:	90 91 15 01 	lds	r25, 0x0115
 140:	99 23       	and	r25, r25
 142:	7c f4       	brge	.+30     	; 0x162 <__vector_12+0x6c>
		secs = 59;
 144:	8b e3       	ldi	r24, 0x3B	; 59
 146:	90 e0       	ldi	r25, 0x00	; 0
 148:	90 93 15 01 	sts	0x0115, r25
 14c:	80 93 14 01 	sts	0x0114, r24
		mins--;
 150:	80 91 00 01 	lds	r24, 0x0100
 154:	90 91 01 01 	lds	r25, 0x0101
 158:	01 97       	sbiw	r24, 0x01	; 1
 15a:	90 93 01 01 	sts	0x0101, r25
 15e:	80 93 00 01 	sts	0x0100, r24
	}
	if(mins >= 60){
 162:	80 91 00 01 	lds	r24, 0x0100
 166:	90 91 01 01 	lds	r25, 0x0101
 16a:	cc 97       	sbiw	r24, 0x3c	; 60
 16c:	6c f0       	brlt	.+26     	; 0x188 <__vector_12+0x92>
		mins = 0;
 16e:	10 92 01 01 	sts	0x0101, r1
 172:	10 92 00 01 	sts	0x0100, r1
		hours++;
 176:	80 91 02 01 	lds	r24, 0x0102
 17a:	90 91 03 01 	lds	r25, 0x0103
 17e:	01 96       	adiw	r24, 0x01	; 1
 180:	90 93 03 01 	sts	0x0103, r25
 184:	80 93 02 01 	sts	0x0102, r24
	}
	if(mins < 0){
 188:	80 91 00 01 	lds	r24, 0x0100
 18c:	90 91 01 01 	lds	r25, 0x0101
 190:	99 23       	and	r25, r25
 192:	7c f4       	brge	.+30     	; 0x1b2 <__vector_12+0xbc>
		mins = 59;
 194:	8b e3       	ldi	r24, 0x3B	; 59
 196:	90 e0       	ldi	r25, 0x00	; 0
 198:	90 93 01 01 	sts	0x0101, r25
 19c:	80 93 00 01 	sts	0x0100, r24
		hours--;
 1a0:	80 91 02 01 	lds	r24, 0x0102
 1a4:	90 91 03 01 	lds	r25, 0x0103
 1a8:	01 97       	sbiw	r24, 0x01	; 1
 1aa:	90 93 03 01 	sts	0x0103, r25
 1ae:	80 93 02 01 	sts	0x0102, r24
	}
	if(hours > 12){
 1b2:	80 91 02 01 	lds	r24, 0x0102
 1b6:	90 91 03 01 	lds	r25, 0x0103
 1ba:	8d 30       	cpi	r24, 0x0D	; 13
 1bc:	91 05       	cpc	r25, r1
 1be:	3c f0       	brlt	.+14     	; 0x1ce <__vector_12+0xd8>
		hours = 1;
 1c0:	81 e0       	ldi	r24, 0x01	; 1
 1c2:	90 e0       	ldi	r25, 0x00	; 0
 1c4:	90 93 03 01 	sts	0x0103, r25
 1c8:	80 93 02 01 	sts	0x0102, r24
 1cc:	09 c0       	rjmp	.+18     	; 0x1e0 <__vector_12+0xea>
	}
	if(hours < 1){
 1ce:	18 16       	cp	r1, r24
 1d0:	19 06       	cpc	r1, r25
 1d2:	34 f0       	brlt	.+12     	; 0x1e0 <__vector_12+0xea>
		hours = 12;
 1d4:	8c e0       	ldi	r24, 0x0C	; 12
 1d6:	90 e0       	ldi	r25, 0x00	; 0
 1d8:	90 93 03 01 	sts	0x0103, r25
 1dc:	80 93 02 01 	sts	0x0102, r24
	}
}
 1e0:	9f 91       	pop	r25
 1e2:	8f 91       	pop	r24
 1e4:	0f 90       	pop	r0
 1e6:	0f be       	out	0x3f, r0	; 63
 1e8:	0f 90       	pop	r0
 1ea:	1f 90       	pop	r1
 1ec:	18 95       	reti

000001ee <__vector_26>:
/**
 * Timer interrupt source 2: the function will be called every 200 milliseconds
 * (you need define CHECK_COUNT correctly) 
 */

ISR (TIMER3_COMPA_vect) {
 1ee:	1f 92       	push	r1
 1f0:	0f 92       	push	r0
 1f2:	0f b6       	in	r0, 0x3f	; 63
 1f4:	0f 92       	push	r0
 1f6:	11 24       	eor	r1, r1
 1f8:	0b b6       	in	r0, 0x3b	; 59
 1fa:	0f 92       	push	r0
 1fc:	2f 93       	push	r18
 1fe:	3f 93       	push	r19
 200:	4f 93       	push	r20
 202:	5f 93       	push	r21
 204:	6f 93       	push	r22
 206:	7f 93       	push	r23
 208:	8f 93       	push	r24
 20a:	9f 93       	push	r25
 20c:	af 93       	push	r26
 20e:	bf 93       	push	r27
 210:	ef 93       	push	r30
 212:	ff 93       	push	r31

	// Insert interrupt handler code for checking push buttons here
	
	switch(read_push_buttons()){
 214:	20 d2       	rcall	.+1088   	; 0x656 <read_push_buttons>
 216:	83 30       	cpi	r24, 0x03	; 3
 218:	01 f1       	breq	.+64     	; 0x25a <__vector_26+0x6c>
 21a:	28 f4       	brcc	.+10     	; 0x226 <__vector_26+0x38>
 21c:	81 30       	cpi	r24, 0x01	; 1
 21e:	49 f0       	breq	.+18     	; 0x232 <__vector_26+0x44>
 220:	82 30       	cpi	r24, 0x02	; 2
 222:	89 f0       	breq	.+34     	; 0x246 <__vector_26+0x58>
 224:	41 c0       	rjmp	.+130    	; 0x2a8 <__vector_26+0xba>
 226:	85 30       	cpi	r24, 0x05	; 5
 228:	61 f1       	breq	.+88     	; 0x282 <__vector_26+0x94>
 22a:	08 f1       	brcs	.+66     	; 0x26e <__vector_26+0x80>
 22c:	86 30       	cpi	r24, 0x06	; 6
 22e:	99 f1       	breq	.+102    	; 0x296 <__vector_26+0xa8>
 230:	3b c0       	rjmp	.+118    	; 0x2a8 <__vector_26+0xba>
		case 0:
		break;
		case 1:
		secs--;
 232:	80 91 14 01 	lds	r24, 0x0114
 236:	90 91 15 01 	lds	r25, 0x0115
 23a:	01 97       	sbiw	r24, 0x01	; 1
 23c:	90 93 15 01 	sts	0x0115, r25
 240:	80 93 14 01 	sts	0x0114, r24
		break;
 244:	31 c0       	rjmp	.+98     	; 0x2a8 <__vector_26+0xba>
		case 2:
		secs++;
 246:	80 91 14 01 	lds	r24, 0x0114
 24a:	90 91 15 01 	lds	r25, 0x0115
 24e:	01 96       	adiw	r24, 0x01	; 1
 250:	90 93 15 01 	sts	0x0115, r25
 254:	80 93 14 01 	sts	0x0114, r24
		break;
 258:	27 c0       	rjmp	.+78     	; 0x2a8 <__vector_26+0xba>
		case 3:
		mins--;
 25a:	80 91 00 01 	lds	r24, 0x0100
 25e:	90 91 01 01 	lds	r25, 0x0101
 262:	01 97       	sbiw	r24, 0x01	; 1
 264:	90 93 01 01 	sts	0x0101, r25
 268:	80 93 00 01 	sts	0x0100, r24
		break;
 26c:	1d c0       	rjmp	.+58     	; 0x2a8 <__vector_26+0xba>
		case 4:
		mins++;
 26e:	80 91 00 01 	lds	r24, 0x0100
 272:	90 91 01 01 	lds	r25, 0x0101
 276:	01 96       	adiw	r24, 0x01	; 1
 278:	90 93 01 01 	sts	0x0101, r25
 27c:	80 93 00 01 	sts	0x0100, r24
		break;
 280:	13 c0       	rjmp	.+38     	; 0x2a8 <__vector_26+0xba>
		case 5:
		hours--;
 282:	80 91 02 01 	lds	r24, 0x0102
 286:	90 91 03 01 	lds	r25, 0x0103
 28a:	01 97       	sbiw	r24, 0x01	; 1
 28c:	90 93 03 01 	sts	0x0103, r25
 290:	80 93 02 01 	sts	0x0102, r24
		break;
 294:	09 c0       	rjmp	.+18     	; 0x2a8 <__vector_26+0xba>
		case 6:
		hours++;
 296:	80 91 02 01 	lds	r24, 0x0102
 29a:	90 91 03 01 	lds	r25, 0x0103
 29e:	01 96       	adiw	r24, 0x01	; 1
 2a0:	90 93 03 01 	sts	0x0103, r25
 2a4:	80 93 02 01 	sts	0x0102, r24
		break;
	}
	if(secs >= 60){
 2a8:	80 91 14 01 	lds	r24, 0x0114
 2ac:	90 91 15 01 	lds	r25, 0x0115
 2b0:	cc 97       	sbiw	r24, 0x3c	; 60
 2b2:	6c f0       	brlt	.+26     	; 0x2ce <__vector_26+0xe0>
		secs = 0;
 2b4:	10 92 15 01 	sts	0x0115, r1
 2b8:	10 92 14 01 	sts	0x0114, r1
		mins++;
 2bc:	80 91 00 01 	lds	r24, 0x0100
 2c0:	90 91 01 01 	lds	r25, 0x0101
 2c4:	01 96       	adiw	r24, 0x01	; 1
 2c6:	90 93 01 01 	sts	0x0101, r25
 2ca:	80 93 00 01 	sts	0x0100, r24
	}
	if(secs < 0){
 2ce:	80 91 14 01 	lds	r24, 0x0114
 2d2:	90 91 15 01 	lds	r25, 0x0115
 2d6:	99 23       	and	r25, r25
 2d8:	7c f4       	brge	.+30     	; 0x2f8 <__vector_26+0x10a>
		secs = 59;
 2da:	8b e3       	ldi	r24, 0x3B	; 59
 2dc:	90 e0       	ldi	r25, 0x00	; 0
 2de:	90 93 15 01 	sts	0x0115, r25
 2e2:	80 93 14 01 	sts	0x0114, r24
		mins--;
 2e6:	80 91 00 01 	lds	r24, 0x0100
 2ea:	90 91 01 01 	lds	r25, 0x0101
 2ee:	01 97       	sbiw	r24, 0x01	; 1
 2f0:	90 93 01 01 	sts	0x0101, r25
 2f4:	80 93 00 01 	sts	0x0100, r24
	}
	if(mins >= 60){
 2f8:	80 91 00 01 	lds	r24, 0x0100
 2fc:	90 91 01 01 	lds	r25, 0x0101
 300:	cc 97       	sbiw	r24, 0x3c	; 60
 302:	6c f0       	brlt	.+26     	; 0x31e <__vector_26+0x130>
		mins = 0;
 304:	10 92 01 01 	sts	0x0101, r1
 308:	10 92 00 01 	sts	0x0100, r1
		hours++;
 30c:	80 91 02 01 	lds	r24, 0x0102
 310:	90 91 03 01 	lds	r25, 0x0103
 314:	01 96       	adiw	r24, 0x01	; 1
 316:	90 93 03 01 	sts	0x0103, r25
 31a:	80 93 02 01 	sts	0x0102, r24
	}
	if(mins < 0){
 31e:	80 91 00 01 	lds	r24, 0x0100
 322:	90 91 01 01 	lds	r25, 0x0101
 326:	99 23       	and	r25, r25
 328:	7c f4       	brge	.+30     	; 0x348 <__vector_26+0x15a>
		mins = 59;
 32a:	8b e3       	ldi	r24, 0x3B	; 59
 32c:	90 e0       	ldi	r25, 0x00	; 0
 32e:	90 93 01 01 	sts	0x0101, r25
 332:	80 93 00 01 	sts	0x0100, r24
		hours--;
 336:	80 91 02 01 	lds	r24, 0x0102
 33a:	90 91 03 01 	lds	r25, 0x0103
 33e:	01 97       	sbiw	r24, 0x01	; 1
 340:	90 93 03 01 	sts	0x0103, r25
 344:	80 93 02 01 	sts	0x0102, r24
	}
	if(hours > 12){
 348:	80 91 02 01 	lds	r24, 0x0102
 34c:	90 91 03 01 	lds	r25, 0x0103
 350:	8d 30       	cpi	r24, 0x0D	; 13
 352:	91 05       	cpc	r25, r1
 354:	3c f0       	brlt	.+14     	; 0x364 <__vector_26+0x176>
		hours = 1;
 356:	81 e0       	ldi	r24, 0x01	; 1
 358:	90 e0       	ldi	r25, 0x00	; 0
 35a:	90 93 03 01 	sts	0x0103, r25
 35e:	80 93 02 01 	sts	0x0102, r24
 362:	09 c0       	rjmp	.+18     	; 0x376 <__vector_26+0x188>
	}
	if(hours < 1){
 364:	18 16       	cp	r1, r24
 366:	19 06       	cpc	r1, r25
 368:	34 f0       	brlt	.+12     	; 0x376 <__vector_26+0x188>
		hours = 12;
 36a:	8c e0       	ldi	r24, 0x0C	; 12
 36c:	90 e0       	ldi	r25, 0x00	; 0
 36e:	90 93 03 01 	sts	0x0103, r25
 372:	80 93 02 01 	sts	0x0102, r24
	}

}
 376:	ff 91       	pop	r31
 378:	ef 91       	pop	r30
 37a:	bf 91       	pop	r27
 37c:	af 91       	pop	r26
 37e:	9f 91       	pop	r25
 380:	8f 91       	pop	r24
 382:	7f 91       	pop	r23
 384:	6f 91       	pop	r22
 386:	5f 91       	pop	r21
 388:	4f 91       	pop	r20
 38a:	3f 91       	pop	r19
 38c:	2f 91       	pop	r18
 38e:	0f 90       	pop	r0
 390:	0b be       	out	0x3b, r0	; 59
 392:	0f 90       	pop	r0
 394:	0f be       	out	0x3f, r0	; 63
 396:	0f 90       	pop	r0
 398:	1f 90       	pop	r1
 39a:	18 95       	reti

0000039c <main>:
 * SW1 decrement seconds
 */

int main() {

	lcd_init();
 39c:	47 d0       	rcall	.+142    	; 0x42c <lcd_init>
	timer_init();
 39e:	94 de       	rcall	.-728    	; 0xc8 <timer_init>
	init_push_buttons();
 3a0:	53 d1       	rcall	.+678    	; 0x648 <init_push_buttons>
	
	while (1) {
		lprintf("%02d:%02d:%02d", hours, mins, secs);
 3a2:	c4 e0       	ldi	r28, 0x04	; 4
 3a4:	d1 e0       	ldi	r29, 0x01	; 1
 3a6:	80 91 15 01 	lds	r24, 0x0115
 3aa:	8f 93       	push	r24
 3ac:	80 91 14 01 	lds	r24, 0x0114
 3b0:	8f 93       	push	r24
 3b2:	80 91 01 01 	lds	r24, 0x0101
 3b6:	8f 93       	push	r24
 3b8:	80 91 00 01 	lds	r24, 0x0100
 3bc:	8f 93       	push	r24
 3be:	80 91 03 01 	lds	r24, 0x0103
 3c2:	8f 93       	push	r24
 3c4:	80 91 02 01 	lds	r24, 0x0102
 3c8:	8f 93       	push	r24
 3ca:	df 93       	push	r29
 3cc:	cf 93       	push	r28
 3ce:	7f d0       	rcall	.+254    	; 0x4ce <lprintf>
 3d0:	8d b7       	in	r24, 0x3d	; 61
 3d2:	9e b7       	in	r25, 0x3e	; 62
 3d4:	08 96       	adiw	r24, 0x08	; 8
 3d6:	0f b6       	in	r0, 0x3f	; 63
 3d8:	f8 94       	cli
 3da:	9e bf       	out	0x3e, r25	; 62
 3dc:	0f be       	out	0x3f, r0	; 63
 3de:	8d bf       	out	0x3d, r24	; 61
 3e0:	e2 cf       	rjmp	.-60     	; 0x3a6 <main+0xa>

000003e2 <lcd_toggle_clear>:
	int i;

	for (i=0;i<size;i++) {		
		lcd_putc(string[i]);
	}
}
 3e2:	de 9a       	sbi	0x1b, 6	; 27
 3e4:	90 e0       	ldi	r25, 0x00	; 0
 3e6:	03 d1       	rcall	.+518    	; 0x5ee <wait_ms>
 3e8:	de 98       	cbi	0x1b, 6	; 27
 3ea:	8b b3       	in	r24, 0x1b	; 27
 3ec:	80 7f       	andi	r24, 0xF0	; 240
 3ee:	8b bb       	out	0x1b, r24	; 27
 3f0:	08 95       	ret

000003f2 <lcd_command>:
 3f2:	cf 93       	push	r28
 3f4:	c8 2f       	mov	r28, r24
 3f6:	dc 98       	cbi	0x1b, 4	; 27
 3f8:	8b b3       	in	r24, 0x1b	; 27
 3fa:	9c 2f       	mov	r25, r28
 3fc:	92 95       	swap	r25
 3fe:	9f 70       	andi	r25, 0x0F	; 15
 400:	89 2b       	or	r24, r25
 402:	8b bb       	out	0x1b, r24	; 27
 404:	82 e0       	ldi	r24, 0x02	; 2
 406:	ed df       	rcall	.-38     	; 0x3e2 <lcd_toggle_clear>
 408:	8b b3       	in	r24, 0x1b	; 27
 40a:	cf 70       	andi	r28, 0x0F	; 15
 40c:	c8 2b       	or	r28, r24
 40e:	cb bb       	out	0x1b, r28	; 27
 410:	82 e0       	ldi	r24, 0x02	; 2
 412:	e7 df       	rcall	.-50     	; 0x3e2 <lcd_toggle_clear>
 414:	dc 9a       	sbi	0x1b, 4	; 27
 416:	cf 91       	pop	r28
 418:	08 95       	ret

0000041a <lcd_clear>:
 41a:	81 e0       	ldi	r24, 0x01	; 1
 41c:	ea df       	rcall	.-44     	; 0x3f2 <lcd_command>
 41e:	81 e0       	ldi	r24, 0x01	; 1
 420:	90 e0       	ldi	r25, 0x00	; 0
 422:	e5 c0       	rjmp	.+458    	; 0x5ee <wait_ms>
 424:	08 95       	ret

00000426 <lcd_home_line1>:
 426:	82 e0       	ldi	r24, 0x02	; 2
 428:	e4 cf       	rjmp	.-56     	; 0x3f2 <lcd_command>
 42a:	08 95       	ret

0000042c <lcd_init>:
 42c:	8f ef       	ldi	r24, 0xFF	; 255
 42e:	8a bb       	out	0x1a, r24	; 26
 430:	83 e0       	ldi	r24, 0x03	; 3
 432:	8b bb       	out	0x1b, r24	; 27
 434:	de 9a       	sbi	0x1b, 6	; 27
 436:	81 e0       	ldi	r24, 0x01	; 1
 438:	90 e0       	ldi	r25, 0x00	; 0
 43a:	d9 d0       	rcall	.+434    	; 0x5ee <wait_ms>
 43c:	de 98       	cbi	0x1b, 6	; 27
 43e:	85 e0       	ldi	r24, 0x05	; 5
 440:	90 e0       	ldi	r25, 0x00	; 0
 442:	d5 d0       	rcall	.+426    	; 0x5ee <wait_ms>
 444:	de 9a       	sbi	0x1b, 6	; 27
 446:	81 e0       	ldi	r24, 0x01	; 1
 448:	90 e0       	ldi	r25, 0x00	; 0
 44a:	d1 d0       	rcall	.+418    	; 0x5ee <wait_ms>
 44c:	de 98       	cbi	0x1b, 6	; 27
 44e:	de 9a       	sbi	0x1b, 6	; 27
 450:	81 e0       	ldi	r24, 0x01	; 1
 452:	90 e0       	ldi	r25, 0x00	; 0
 454:	cc d0       	rcall	.+408    	; 0x5ee <wait_ms>
 456:	de 98       	cbi	0x1b, 6	; 27
 458:	82 e0       	ldi	r24, 0x02	; 2
 45a:	8b bb       	out	0x1b, r24	; 27
 45c:	81 e0       	ldi	r24, 0x01	; 1
 45e:	c1 df       	rcall	.-126    	; 0x3e2 <lcd_toggle_clear>
 460:	8b b3       	in	r24, 0x1b	; 27
 462:	8b bb       	out	0x1b, r24	; 27
 464:	81 e0       	ldi	r24, 0x01	; 1
 466:	bd df       	rcall	.-134    	; 0x3e2 <lcd_toggle_clear>
 468:	8b b3       	in	r24, 0x1b	; 27
 46a:	8e 60       	ori	r24, 0x0E	; 14
 46c:	8b bb       	out	0x1b, r24	; 27
 46e:	81 e0       	ldi	r24, 0x01	; 1
 470:	b8 df       	rcall	.-144    	; 0x3e2 <lcd_toggle_clear>
 472:	8b b3       	in	r24, 0x1b	; 27
 474:	8b bb       	out	0x1b, r24	; 27
 476:	81 e0       	ldi	r24, 0x01	; 1
 478:	b4 df       	rcall	.-152    	; 0x3e2 <lcd_toggle_clear>
 47a:	8b b3       	in	r24, 0x1b	; 27
 47c:	86 60       	ori	r24, 0x06	; 6
 47e:	8b bb       	out	0x1b, r24	; 27
 480:	81 e0       	ldi	r24, 0x01	; 1
 482:	af df       	rcall	.-162    	; 0x3e2 <lcd_toggle_clear>
 484:	8b b3       	in	r24, 0x1b	; 27
 486:	8b bb       	out	0x1b, r24	; 27
 488:	81 e0       	ldi	r24, 0x01	; 1
 48a:	ab df       	rcall	.-170    	; 0x3e2 <lcd_toggle_clear>
 48c:	d8 9a       	sbi	0x1b, 0	; 27
 48e:	81 e0       	ldi	r24, 0x01	; 1
 490:	a8 df       	rcall	.-176    	; 0x3e2 <lcd_toggle_clear>
 492:	dc 9a       	sbi	0x1b, 4	; 27
 494:	c8 cf       	rjmp	.-112    	; 0x426 <lcd_home_line1>
 496:	08 95       	ret

00000498 <lcd_home_line2>:
 498:	80 ec       	ldi	r24, 0xC0	; 192
 49a:	ab cf       	rjmp	.-170    	; 0x3f2 <lcd_command>
 49c:	08 95       	ret

0000049e <lcd_home_line3>:
 49e:	84 e9       	ldi	r24, 0x94	; 148
 4a0:	a8 cf       	rjmp	.-176    	; 0x3f2 <lcd_command>
 4a2:	08 95       	ret

000004a4 <lcd_home_line4>:
 4a4:	84 ed       	ldi	r24, 0xD4	; 212
 4a6:	a5 cf       	rjmp	.-182    	; 0x3f2 <lcd_command>
 4a8:	08 95       	ret

000004aa <lcd_putc>:
 4aa:	cf 93       	push	r28
 4ac:	c8 2f       	mov	r28, r24
 4ae:	8b b3       	in	r24, 0x1b	; 27
 4b0:	9c 2f       	mov	r25, r28
 4b2:	92 95       	swap	r25
 4b4:	9f 70       	andi	r25, 0x0F	; 15
 4b6:	89 2b       	or	r24, r25
 4b8:	8b bb       	out	0x1b, r24	; 27
 4ba:	81 e0       	ldi	r24, 0x01	; 1
 4bc:	92 df       	rcall	.-220    	; 0x3e2 <lcd_toggle_clear>
 4be:	8b b3       	in	r24, 0x1b	; 27
 4c0:	cf 70       	andi	r28, 0x0F	; 15
 4c2:	c8 2b       	or	r28, r24
 4c4:	cb bb       	out	0x1b, r28	; 27
 4c6:	81 e0       	ldi	r24, 0x01	; 1
 4c8:	8c df       	rcall	.-232    	; 0x3e2 <lcd_toggle_clear>
 4ca:	cf 91       	pop	r28
 4cc:	08 95       	ret

000004ce <lprintf>:
 *
 * Code from this site was also used: http://www.ozzu.com/cpp-tutorials/tutorial-writing-custom-printf-wrapper-function-t89166.html
 * @author Kerrick Staley & Chad Nelson
 * @date 05/16/2012
 */
void lprintf(const char *format, ...) {
 4ce:	cf 92       	push	r12
 4d0:	df 92       	push	r13
 4d2:	ef 92       	push	r14
 4d4:	ff 92       	push	r15
 4d6:	0f 93       	push	r16
 4d8:	1f 93       	push	r17
 4da:	cf 93       	push	r28
 4dc:	df 93       	push	r29
 4de:	cd b7       	in	r28, 0x3d	; 61
 4e0:	de b7       	in	r29, 0x3e	; 62
 4e2:	c1 55       	subi	r28, 0x51	; 81
 4e4:	d1 09       	sbc	r29, r1
 4e6:	0f b6       	in	r0, 0x3f	; 63
 4e8:	f8 94       	cli
 4ea:	de bf       	out	0x3e, r29	; 62
 4ec:	0f be       	out	0x3f, r0	; 63
 4ee:	cd bf       	out	0x3d, r28	; 61
 4f0:	fe 01       	movw	r30, r28
 4f2:	e4 5a       	subi	r30, 0xA4	; 164
 4f4:	ff 4f       	sbci	r31, 0xFF	; 255
 4f6:	41 91       	ld	r20, Z+
 4f8:	51 91       	ld	r21, Z+
	static char lastbuffer[LCD_TOTAL_CHARS + 1];

	char buffer[LCD_TOTAL_CHARS + 1];
	va_list arglist;
	va_start(arglist, format);
	vsnprintf(buffer, LCD_TOTAL_CHARS + 1, format, arglist);
 4fa:	9f 01       	movw	r18, r30
 4fc:	61 e5       	ldi	r22, 0x51	; 81
 4fe:	70 e0       	ldi	r23, 0x00	; 0
 500:	ce 01       	movw	r24, r28
 502:	01 96       	adiw	r24, 0x01	; 1
 504:	f7 d0       	rcall	.+494    	; 0x6f4 <vsnprintf>
	
	if (!strcmp(lastbuffer, buffer))
 506:	be 01       	movw	r22, r28
 508:	6f 5f       	subi	r22, 0xFF	; 255
 50a:	7f 4f       	sbci	r23, 0xFF	; 255
 50c:	86 e1       	ldi	r24, 0x16	; 22
 50e:	91 e0       	ldi	r25, 0x01	; 1
 510:	e1 d0       	rcall	.+450    	; 0x6d4 <strcmp>
 512:	89 2b       	or	r24, r25
 514:	09 f4       	brne	.+2      	; 0x518 <lprintf+0x4a>
 516:	3f c0       	rjmp	.+126    	; 0x596 <lprintf+0xc8>
		return;
	
	strcpy(lastbuffer, buffer);
 518:	be 01       	movw	r22, r28
 51a:	6f 5f       	subi	r22, 0xFF	; 255
 51c:	7f 4f       	sbci	r23, 0xFF	; 255
 51e:	86 e1       	ldi	r24, 0x16	; 22
 520:	91 e0       	ldi	r25, 0x01	; 1
 522:	e1 d0       	rcall	.+450    	; 0x6e6 <strcpy>
	lcd_clear();
 524:	7a df       	rcall	.-268    	; 0x41a <lcd_clear>
 526:	9e 01       	movw	r18, r28
 528:	2f 5f       	subi	r18, 0xFF	; 255
 52a:	3f 4f       	sbci	r19, 0xFF	; 255
 52c:	69 01       	movw	r12, r18
	char *str = buffer;
	int charnum = 0;
 52e:	00 e0       	ldi	r16, 0x00	; 0
 530:	10 e0       	ldi	r17, 0x00	; 0
	while (*str && charnum < LCD_TOTAL_CHARS) {
		if (*str == '\n') {
			/* fill remainder of line with spaces */
			charnum += LCD_WIDTH - charnum % LCD_WIDTH;
 532:	0f 2e       	mov	r0, r31
 534:	f4 e1       	ldi	r31, 0x14	; 20
 536:	ef 2e       	mov	r14, r31
 538:	f1 2c       	mov	r15, r1
 53a:	f0 2d       	mov	r31, r0
	
	strcpy(lastbuffer, buffer);
	lcd_clear();
	char *str = buffer;
	int charnum = 0;
	while (*str && charnum < LCD_TOTAL_CHARS) {
 53c:	24 c0       	rjmp	.+72     	; 0x586 <lprintf+0xb8>
		if (*str == '\n') {
 53e:	8a 30       	cpi	r24, 0x0A	; 10
 540:	49 f4       	brne	.+18     	; 0x554 <lprintf+0x86>
			/* fill remainder of line with spaces */
			charnum += LCD_WIDTH - charnum % LCD_WIDTH;
 542:	c8 01       	movw	r24, r16
 544:	b7 01       	movw	r22, r14
 546:	9f d0       	rcall	.+318    	; 0x686 <__divmodhi4>
 548:	f7 01       	movw	r30, r14
 54a:	e8 1b       	sub	r30, r24
 54c:	f9 0b       	sbc	r31, r25
 54e:	0e 0f       	add	r16, r30
 550:	1f 1f       	adc	r17, r31
 552:	03 c0       	rjmp	.+6      	; 0x55a <lprintf+0x8c>
		} else {
			lcd_putc(*str);
 554:	aa df       	rcall	.-172    	; 0x4aa <lcd_putc>
			charnum++;
 556:	0f 5f       	subi	r16, 0xFF	; 255
 558:	1f 4f       	sbci	r17, 0xFF	; 255
		 * 0x54...0x68 : line 4
		 * 
		 * The cursor position must be reset at the end of every line, otherwise, after writing line 1, it writes line 3 and then nothingness
		 */
		
		if (charnum % LCD_WIDTH == 0) { 
 55a:	c8 01       	movw	r24, r16
 55c:	b7 01       	movw	r22, r14
 55e:	93 d0       	rcall	.+294    	; 0x686 <__divmodhi4>
 560:	89 2b       	or	r24, r25
 562:	89 f4       	brne	.+34     	; 0x586 <lprintf+0xb8>
			switch (charnum / LCD_WIDTH) {
 564:	c8 01       	movw	r24, r16
 566:	b7 01       	movw	r22, r14
 568:	8e d0       	rcall	.+284    	; 0x686 <__divmodhi4>
 56a:	62 30       	cpi	r22, 0x02	; 2
 56c:	71 05       	cpc	r23, r1
 56e:	41 f0       	breq	.+16     	; 0x580 <lprintf+0xb2>
 570:	63 30       	cpi	r22, 0x03	; 3
 572:	71 05       	cpc	r23, r1
 574:	39 f0       	breq	.+14     	; 0x584 <lprintf+0xb6>
 576:	61 30       	cpi	r22, 0x01	; 1
 578:	71 05       	cpc	r23, r1
 57a:	29 f4       	brne	.+10     	; 0x586 <lprintf+0xb8>
			case 1:
				lcd_home_line2();
 57c:	8d df       	rcall	.-230    	; 0x498 <lcd_home_line2>
				break;
 57e:	03 c0       	rjmp	.+6      	; 0x586 <lprintf+0xb8>
			case 2:
				lcd_home_line3();
 580:	8e df       	rcall	.-228    	; 0x49e <lcd_home_line3>
				break;
 582:	01 c0       	rjmp	.+2      	; 0x586 <lprintf+0xb8>
			case 3:
				lcd_home_line4();
 584:	8f df       	rcall	.-226    	; 0x4a4 <lcd_home_line4>
	
	strcpy(lastbuffer, buffer);
	lcd_clear();
	char *str = buffer;
	int charnum = 0;
	while (*str && charnum < LCD_TOTAL_CHARS) {
 586:	f6 01       	movw	r30, r12
 588:	81 91       	ld	r24, Z+
 58a:	6f 01       	movw	r12, r30
 58c:	88 23       	and	r24, r24
 58e:	19 f0       	breq	.+6      	; 0x596 <lprintf+0xc8>
 590:	00 35       	cpi	r16, 0x50	; 80
 592:	11 05       	cpc	r17, r1
 594:	a4 f2       	brlt	.-88     	; 0x53e <lprintf+0x70>
				lcd_home_line4();
			}
		}
	}
	va_end(arglist);
}
 596:	cf 5a       	subi	r28, 0xAF	; 175
 598:	df 4f       	sbci	r29, 0xFF	; 255
 59a:	0f b6       	in	r0, 0x3f	; 63
 59c:	f8 94       	cli
 59e:	de bf       	out	0x3e, r29	; 62
 5a0:	0f be       	out	0x3f, r0	; 63
 5a2:	cd bf       	out	0x3d, r28	; 61
 5a4:	df 91       	pop	r29
 5a6:	cf 91       	pop	r28
 5a8:	1f 91       	pop	r17
 5aa:	0f 91       	pop	r16
 5ac:	ff 90       	pop	r15
 5ae:	ef 90       	pop	r14
 5b0:	df 90       	pop	r13
 5b2:	cf 90       	pop	r12
 5b4:	08 95       	ret

000005b6 <timer2_start>:
}


// Start timer2
void timer2_start(char unit) {
	timer2_tick=0;
 5b6:	10 92 68 01 	sts	0x0168, r1
 5ba:	10 92 67 01 	sts	0x0167, r1
	if ( unit == 0 ) { 		//unit = 0 is for slow 
 5be:	81 11       	cpse	r24, r1
 5c0:	06 c0       	rjmp	.+12     	; 0x5ce <timer2_start+0x18>
        TCCR2=0b00001011;	//WGM:CTC, COM:OC2 disconnected,pre_scaler = 64
 5c2:	8b e0       	ldi	r24, 0x0B	; 11
 5c4:	85 bd       	out	0x25, r24	; 37
        TIMSK|=0b10000000;	//Enabling O.C. Interrupt for Timer2
 5c6:	87 b7       	in	r24, 0x37	; 55
 5c8:	80 68       	ori	r24, 0x80	; 128
 5ca:	87 bf       	out	0x37, r24	; 55
 5cc:	07 c0       	rjmp	.+14     	; 0x5dc <timer2_start+0x26>
	}
	if (unit == 1) { 		//unit = 1 is for fast
 5ce:	81 30       	cpi	r24, 0x01	; 1
 5d0:	29 f4       	brne	.+10     	; 0x5dc <timer2_start+0x26>
        TCCR2=0b00001001;	//WGM:CTC, COM:OC2 disconnected,pre_scaler = 1
 5d2:	89 e0       	ldi	r24, 0x09	; 9
 5d4:	85 bd       	out	0x25, r24	; 37
        TIMSK|=0b10000000;	//Enabling O.C. Interrupt for Timer2
 5d6:	87 b7       	in	r24, 0x37	; 55
 5d8:	80 68       	ori	r24, 0x80	; 128
 5da:	87 bf       	out	0x37, r24	; 55
	}
	sei();
 5dc:	78 94       	sei
 5de:	08 95       	ret

000005e0 <timer2_stop>:
}


// Stop timer2
void timer2_stop() {
	TIMSK&=~0b10000000;		//Disabling O.C. Interrupt for Timer2
 5e0:	87 b7       	in	r24, 0x37	; 55
 5e2:	8f 77       	andi	r24, 0x7F	; 127
 5e4:	87 bf       	out	0x37, r24	; 55
	TCCR2&=0b01111111;		//Clearing O.C. settings
 5e6:	85 b5       	in	r24, 0x25	; 37
 5e8:	8f 77       	andi	r24, 0x7F	; 127
 5ea:	85 bd       	out	0x25, r24	; 37
 5ec:	08 95       	ret

000005ee <wait_ms>:
void timer2_start(char unit);
void timer2_stop();


/// Blocks for a specified number of milliseconds
void wait_ms(unsigned int time_val) {
 5ee:	cf 93       	push	r28
 5f0:	df 93       	push	r29
 5f2:	ec 01       	movw	r28, r24
	//Seting OC value for time requested
	OCR2=250; 				//Clock is 16 MHz. At a prescaler of 64, 250 timer ticks = 1ms.
 5f4:	8a ef       	ldi	r24, 0xFA	; 250
 5f6:	83 bd       	out	0x23, r24	; 35
	timer2_tick=0;
 5f8:	10 92 68 01 	sts	0x0168, r1
 5fc:	10 92 67 01 	sts	0x0167, r1
	timer2_start(0);
 600:	80 e0       	ldi	r24, 0x00	; 0
 602:	d9 df       	rcall	.-78     	; 0x5b6 <timer2_start>

	//Waiting for time
	while(timer2_tick < time_val);
 604:	20 91 67 01 	lds	r18, 0x0167
 608:	30 91 68 01 	lds	r19, 0x0168
 60c:	2c 17       	cp	r18, r28
 60e:	3d 07       	cpc	r19, r29
 610:	c8 f3       	brcs	.-14     	; 0x604 <wait_ms+0x16>

	timer2_stop();
 612:	e6 df       	rcall	.-52     	; 0x5e0 <timer2_stop>
}
 614:	df 91       	pop	r29
 616:	cf 91       	pop	r28
 618:	08 95       	ret

0000061a <__vector_9>:
	TCCR2&=0b01111111;		//Clearing O.C. settings
}


// Interrupt handler (runs every 1 ms)
ISR (TIMER2_COMP_vect) {
 61a:	1f 92       	push	r1
 61c:	0f 92       	push	r0
 61e:	0f b6       	in	r0, 0x3f	; 63
 620:	0f 92       	push	r0
 622:	11 24       	eor	r1, r1
 624:	8f 93       	push	r24
 626:	9f 93       	push	r25
	timer2_tick++;
 628:	80 91 67 01 	lds	r24, 0x0167
 62c:	90 91 68 01 	lds	r25, 0x0168
 630:	01 96       	adiw	r24, 0x01	; 1
 632:	90 93 68 01 	sts	0x0168, r25
 636:	80 93 67 01 	sts	0x0167, r24
}
 63a:	9f 91       	pop	r25
 63c:	8f 91       	pop	r24
 63e:	0f 90       	pop	r0
 640:	0f be       	out	0x3f, r0	; 63
 642:	0f 90       	pop	r0
 644:	1f 90       	pop	r1
 646:	18 95       	reti

00000648 <init_push_buttons>:



/// Initialize PORTC to accept push buttons as input
void init_push_buttons(void) {
	DDRC &= 0xC0;  //Setting PC0-PC5 to input
 648:	84 b3       	in	r24, 0x14	; 20
 64a:	80 7c       	andi	r24, 0xC0	; 192
 64c:	84 bb       	out	0x14, r24	; 20
	PORTC |= 0x3F; //Setting pins' pull up resistors
 64e:	85 b3       	in	r24, 0x15	; 21
 650:	8f 63       	ori	r24, 0x3F	; 63
 652:	85 bb       	out	0x15, r24	; 21
 654:	08 95       	ret

00000656 <read_push_buttons>:
	// ((PINC >> 2) & 1) => 0 if SW3 is pushed
	// ((PINC >> 2) & 1) => 1 if SW3 is not pushed

	// INSERT CODE HERE!
	
	if(!((PINC >> 5) & 1)) {
 656:	9d 9b       	sbis	0x13, 5	; 19
 658:	0c c0       	rjmp	.+24     	; 0x672 <read_push_buttons+0x1c>
		return 6;
	}
	else if(!((PINC >> 4) & 1)) {
 65a:	9c 9b       	sbis	0x13, 4	; 19
 65c:	0c c0       	rjmp	.+24     	; 0x676 <read_push_buttons+0x20>
		return 5;
	}
	else if(!((PINC >> 3) & 1)) {
 65e:	9b 9b       	sbis	0x13, 3	; 19
 660:	0c c0       	rjmp	.+24     	; 0x67a <read_push_buttons+0x24>
		return 4;
	}
	else if(!((PINC >> 2) & 1)) {
 662:	9a 9b       	sbis	0x13, 2	; 19
 664:	0c c0       	rjmp	.+24     	; 0x67e <read_push_buttons+0x28>
			return 3;
	}
	else if(!((PINC >> 1) & 1)) {
 666:	99 9b       	sbis	0x13, 1	; 19
 668:	0c c0       	rjmp	.+24     	; 0x682 <read_push_buttons+0x2c>
		return 2;
		}
	else if(!((PINC >> 0) & 1)) {
 66a:	83 b3       	in	r24, 0x13	; 19
 66c:	80 95       	com	r24
 66e:	81 70       	andi	r24, 0x01	; 1
 670:	08 95       	ret
	// ((PINC >> 2) & 1) => 1 if SW3 is not pushed

	// INSERT CODE HERE!
	
	if(!((PINC >> 5) & 1)) {
		return 6;
 672:	86 e0       	ldi	r24, 0x06	; 6
 674:	08 95       	ret
	}
	else if(!((PINC >> 4) & 1)) {
		return 5;
 676:	85 e0       	ldi	r24, 0x05	; 5
 678:	08 95       	ret
	}
	else if(!((PINC >> 3) & 1)) {
		return 4;
 67a:	84 e0       	ldi	r24, 0x04	; 4
 67c:	08 95       	ret
	}
	else if(!((PINC >> 2) & 1)) {
			return 3;
 67e:	83 e0       	ldi	r24, 0x03	; 3
 680:	08 95       	ret
	}
	else if(!((PINC >> 1) & 1)) {
		return 2;
 682:	82 e0       	ldi	r24, 0x02	; 2
	else {
	return 0;	
	}

	
}
 684:	08 95       	ret

00000686 <__divmodhi4>:
 686:	97 fb       	bst	r25, 7
 688:	07 2e       	mov	r0, r23
 68a:	16 f4       	brtc	.+4      	; 0x690 <__divmodhi4+0xa>
 68c:	00 94       	com	r0
 68e:	06 d0       	rcall	.+12     	; 0x69c <__divmodhi4_neg1>
 690:	77 fd       	sbrc	r23, 7
 692:	08 d0       	rcall	.+16     	; 0x6a4 <__divmodhi4_neg2>
 694:	0b d0       	rcall	.+22     	; 0x6ac <__udivmodhi4>
 696:	07 fc       	sbrc	r0, 7
 698:	05 d0       	rcall	.+10     	; 0x6a4 <__divmodhi4_neg2>
 69a:	3e f4       	brtc	.+14     	; 0x6aa <__divmodhi4_exit>

0000069c <__divmodhi4_neg1>:
 69c:	90 95       	com	r25
 69e:	81 95       	neg	r24
 6a0:	9f 4f       	sbci	r25, 0xFF	; 255
 6a2:	08 95       	ret

000006a4 <__divmodhi4_neg2>:
 6a4:	70 95       	com	r23
 6a6:	61 95       	neg	r22
 6a8:	7f 4f       	sbci	r23, 0xFF	; 255

000006aa <__divmodhi4_exit>:
 6aa:	08 95       	ret

000006ac <__udivmodhi4>:
 6ac:	aa 1b       	sub	r26, r26
 6ae:	bb 1b       	sub	r27, r27
 6b0:	51 e1       	ldi	r21, 0x11	; 17
 6b2:	07 c0       	rjmp	.+14     	; 0x6c2 <__udivmodhi4_ep>

000006b4 <__udivmodhi4_loop>:
 6b4:	aa 1f       	adc	r26, r26
 6b6:	bb 1f       	adc	r27, r27
 6b8:	a6 17       	cp	r26, r22
 6ba:	b7 07       	cpc	r27, r23
 6bc:	10 f0       	brcs	.+4      	; 0x6c2 <__udivmodhi4_ep>
 6be:	a6 1b       	sub	r26, r22
 6c0:	b7 0b       	sbc	r27, r23

000006c2 <__udivmodhi4_ep>:
 6c2:	88 1f       	adc	r24, r24
 6c4:	99 1f       	adc	r25, r25
 6c6:	5a 95       	dec	r21
 6c8:	a9 f7       	brne	.-22     	; 0x6b4 <__udivmodhi4_loop>
 6ca:	80 95       	com	r24
 6cc:	90 95       	com	r25
 6ce:	bc 01       	movw	r22, r24
 6d0:	cd 01       	movw	r24, r26
 6d2:	08 95       	ret

000006d4 <strcmp>:
 6d4:	fb 01       	movw	r30, r22
 6d6:	dc 01       	movw	r26, r24
 6d8:	8d 91       	ld	r24, X+
 6da:	01 90       	ld	r0, Z+
 6dc:	80 19       	sub	r24, r0
 6de:	01 10       	cpse	r0, r1
 6e0:	d9 f3       	breq	.-10     	; 0x6d8 <strcmp+0x4>
 6e2:	99 0b       	sbc	r25, r25
 6e4:	08 95       	ret

000006e6 <strcpy>:
 6e6:	fb 01       	movw	r30, r22
 6e8:	dc 01       	movw	r26, r24
 6ea:	01 90       	ld	r0, Z+
 6ec:	0d 92       	st	X+, r0
 6ee:	00 20       	and	r0, r0
 6f0:	e1 f7       	brne	.-8      	; 0x6ea <strcpy+0x4>
 6f2:	08 95       	ret

000006f4 <vsnprintf>:
 6f4:	0f 93       	push	r16
 6f6:	1f 93       	push	r17
 6f8:	cf 93       	push	r28
 6fa:	df 93       	push	r29
 6fc:	cd b7       	in	r28, 0x3d	; 61
 6fe:	de b7       	in	r29, 0x3e	; 62
 700:	2e 97       	sbiw	r28, 0x0e	; 14
 702:	0f b6       	in	r0, 0x3f	; 63
 704:	f8 94       	cli
 706:	de bf       	out	0x3e, r29	; 62
 708:	0f be       	out	0x3f, r0	; 63
 70a:	cd bf       	out	0x3d, r28	; 61
 70c:	8c 01       	movw	r16, r24
 70e:	ca 01       	movw	r24, r20
 710:	46 e0       	ldi	r20, 0x06	; 6
 712:	4c 83       	std	Y+4, r20	; 0x04
 714:	1a 83       	std	Y+2, r17	; 0x02
 716:	09 83       	std	Y+1, r16	; 0x01
 718:	77 ff       	sbrs	r23, 7
 71a:	02 c0       	rjmp	.+4      	; 0x720 <vsnprintf+0x2c>
 71c:	60 e0       	ldi	r22, 0x00	; 0
 71e:	70 e8       	ldi	r23, 0x80	; 128
 720:	61 50       	subi	r22, 0x01	; 1
 722:	71 09       	sbc	r23, r1
 724:	7e 83       	std	Y+6, r23	; 0x06
 726:	6d 83       	std	Y+5, r22	; 0x05
 728:	a9 01       	movw	r20, r18
 72a:	bc 01       	movw	r22, r24
 72c:	ce 01       	movw	r24, r28
 72e:	01 96       	adiw	r24, 0x01	; 1
 730:	19 d0       	rcall	.+50     	; 0x764 <vfprintf>
 732:	4d 81       	ldd	r20, Y+5	; 0x05
 734:	5e 81       	ldd	r21, Y+6	; 0x06
 736:	57 fd       	sbrc	r21, 7
 738:	0a c0       	rjmp	.+20     	; 0x74e <vsnprintf+0x5a>
 73a:	2f 81       	ldd	r18, Y+7	; 0x07
 73c:	38 85       	ldd	r19, Y+8	; 0x08
 73e:	42 17       	cp	r20, r18
 740:	53 07       	cpc	r21, r19
 742:	0c f4       	brge	.+2      	; 0x746 <vsnprintf+0x52>
 744:	9a 01       	movw	r18, r20
 746:	f8 01       	movw	r30, r16
 748:	e2 0f       	add	r30, r18
 74a:	f3 1f       	adc	r31, r19
 74c:	10 82       	st	Z, r1
 74e:	2e 96       	adiw	r28, 0x0e	; 14
 750:	0f b6       	in	r0, 0x3f	; 63
 752:	f8 94       	cli
 754:	de bf       	out	0x3e, r29	; 62
 756:	0f be       	out	0x3f, r0	; 63
 758:	cd bf       	out	0x3d, r28	; 61
 75a:	df 91       	pop	r29
 75c:	cf 91       	pop	r28
 75e:	1f 91       	pop	r17
 760:	0f 91       	pop	r16
 762:	08 95       	ret

00000764 <vfprintf>:
 764:	2f 92       	push	r2
 766:	3f 92       	push	r3
 768:	4f 92       	push	r4
 76a:	5f 92       	push	r5
 76c:	6f 92       	push	r6
 76e:	7f 92       	push	r7
 770:	8f 92       	push	r8
 772:	9f 92       	push	r9
 774:	af 92       	push	r10
 776:	bf 92       	push	r11
 778:	cf 92       	push	r12
 77a:	df 92       	push	r13
 77c:	ef 92       	push	r14
 77e:	ff 92       	push	r15
 780:	0f 93       	push	r16
 782:	1f 93       	push	r17
 784:	cf 93       	push	r28
 786:	df 93       	push	r29
 788:	cd b7       	in	r28, 0x3d	; 61
 78a:	de b7       	in	r29, 0x3e	; 62
 78c:	2c 97       	sbiw	r28, 0x0c	; 12
 78e:	0f b6       	in	r0, 0x3f	; 63
 790:	f8 94       	cli
 792:	de bf       	out	0x3e, r29	; 62
 794:	0f be       	out	0x3f, r0	; 63
 796:	cd bf       	out	0x3d, r28	; 61
 798:	7c 01       	movw	r14, r24
 79a:	6b 01       	movw	r12, r22
 79c:	8a 01       	movw	r16, r20
 79e:	fc 01       	movw	r30, r24
 7a0:	17 82       	std	Z+7, r1	; 0x07
 7a2:	16 82       	std	Z+6, r1	; 0x06
 7a4:	83 81       	ldd	r24, Z+3	; 0x03
 7a6:	81 ff       	sbrs	r24, 1
 7a8:	b0 c1       	rjmp	.+864    	; 0xb0a <vfprintf+0x3a6>
 7aa:	ce 01       	movw	r24, r28
 7ac:	01 96       	adiw	r24, 0x01	; 1
 7ae:	4c 01       	movw	r8, r24
 7b0:	f7 01       	movw	r30, r14
 7b2:	93 81       	ldd	r25, Z+3	; 0x03
 7b4:	f6 01       	movw	r30, r12
 7b6:	93 fd       	sbrc	r25, 3
 7b8:	85 91       	lpm	r24, Z+
 7ba:	93 ff       	sbrs	r25, 3
 7bc:	81 91       	ld	r24, Z+
 7be:	6f 01       	movw	r12, r30
 7c0:	88 23       	and	r24, r24
 7c2:	09 f4       	brne	.+2      	; 0x7c6 <vfprintf+0x62>
 7c4:	9e c1       	rjmp	.+828    	; 0xb02 <vfprintf+0x39e>
 7c6:	85 32       	cpi	r24, 0x25	; 37
 7c8:	39 f4       	brne	.+14     	; 0x7d8 <vfprintf+0x74>
 7ca:	93 fd       	sbrc	r25, 3
 7cc:	85 91       	lpm	r24, Z+
 7ce:	93 ff       	sbrs	r25, 3
 7d0:	81 91       	ld	r24, Z+
 7d2:	6f 01       	movw	r12, r30
 7d4:	85 32       	cpi	r24, 0x25	; 37
 7d6:	21 f4       	brne	.+8      	; 0x7e0 <vfprintf+0x7c>
 7d8:	b7 01       	movw	r22, r14
 7da:	90 e0       	ldi	r25, 0x00	; 0
 7dc:	c7 d1       	rcall	.+910    	; 0xb6c <fputc>
 7de:	e8 cf       	rjmp	.-48     	; 0x7b0 <vfprintf+0x4c>
 7e0:	51 2c       	mov	r5, r1
 7e2:	31 2c       	mov	r3, r1
 7e4:	20 e0       	ldi	r18, 0x00	; 0
 7e6:	20 32       	cpi	r18, 0x20	; 32
 7e8:	a0 f4       	brcc	.+40     	; 0x812 <vfprintf+0xae>
 7ea:	8b 32       	cpi	r24, 0x2B	; 43
 7ec:	69 f0       	breq	.+26     	; 0x808 <vfprintf+0xa4>
 7ee:	30 f4       	brcc	.+12     	; 0x7fc <vfprintf+0x98>
 7f0:	80 32       	cpi	r24, 0x20	; 32
 7f2:	59 f0       	breq	.+22     	; 0x80a <vfprintf+0xa6>
 7f4:	83 32       	cpi	r24, 0x23	; 35
 7f6:	69 f4       	brne	.+26     	; 0x812 <vfprintf+0xae>
 7f8:	20 61       	ori	r18, 0x10	; 16
 7fa:	2c c0       	rjmp	.+88     	; 0x854 <vfprintf+0xf0>
 7fc:	8d 32       	cpi	r24, 0x2D	; 45
 7fe:	39 f0       	breq	.+14     	; 0x80e <vfprintf+0xaa>
 800:	80 33       	cpi	r24, 0x30	; 48
 802:	39 f4       	brne	.+14     	; 0x812 <vfprintf+0xae>
 804:	21 60       	ori	r18, 0x01	; 1
 806:	26 c0       	rjmp	.+76     	; 0x854 <vfprintf+0xf0>
 808:	22 60       	ori	r18, 0x02	; 2
 80a:	24 60       	ori	r18, 0x04	; 4
 80c:	23 c0       	rjmp	.+70     	; 0x854 <vfprintf+0xf0>
 80e:	28 60       	ori	r18, 0x08	; 8
 810:	21 c0       	rjmp	.+66     	; 0x854 <vfprintf+0xf0>
 812:	27 fd       	sbrc	r18, 7
 814:	27 c0       	rjmp	.+78     	; 0x864 <vfprintf+0x100>
 816:	30 ed       	ldi	r19, 0xD0	; 208
 818:	38 0f       	add	r19, r24
 81a:	3a 30       	cpi	r19, 0x0A	; 10
 81c:	78 f4       	brcc	.+30     	; 0x83c <vfprintf+0xd8>
 81e:	26 ff       	sbrs	r18, 6
 820:	06 c0       	rjmp	.+12     	; 0x82e <vfprintf+0xca>
 822:	fa e0       	ldi	r31, 0x0A	; 10
 824:	5f 9e       	mul	r5, r31
 826:	30 0d       	add	r19, r0
 828:	11 24       	eor	r1, r1
 82a:	53 2e       	mov	r5, r19
 82c:	13 c0       	rjmp	.+38     	; 0x854 <vfprintf+0xf0>
 82e:	8a e0       	ldi	r24, 0x0A	; 10
 830:	38 9e       	mul	r3, r24
 832:	30 0d       	add	r19, r0
 834:	11 24       	eor	r1, r1
 836:	33 2e       	mov	r3, r19
 838:	20 62       	ori	r18, 0x20	; 32
 83a:	0c c0       	rjmp	.+24     	; 0x854 <vfprintf+0xf0>
 83c:	8e 32       	cpi	r24, 0x2E	; 46
 83e:	21 f4       	brne	.+8      	; 0x848 <vfprintf+0xe4>
 840:	26 fd       	sbrc	r18, 6
 842:	5f c1       	rjmp	.+702    	; 0xb02 <vfprintf+0x39e>
 844:	20 64       	ori	r18, 0x40	; 64
 846:	06 c0       	rjmp	.+12     	; 0x854 <vfprintf+0xf0>
 848:	8c 36       	cpi	r24, 0x6C	; 108
 84a:	11 f4       	brne	.+4      	; 0x850 <vfprintf+0xec>
 84c:	20 68       	ori	r18, 0x80	; 128
 84e:	02 c0       	rjmp	.+4      	; 0x854 <vfprintf+0xf0>
 850:	88 36       	cpi	r24, 0x68	; 104
 852:	41 f4       	brne	.+16     	; 0x864 <vfprintf+0x100>
 854:	f6 01       	movw	r30, r12
 856:	93 fd       	sbrc	r25, 3
 858:	85 91       	lpm	r24, Z+
 85a:	93 ff       	sbrs	r25, 3
 85c:	81 91       	ld	r24, Z+
 85e:	6f 01       	movw	r12, r30
 860:	81 11       	cpse	r24, r1
 862:	c1 cf       	rjmp	.-126    	; 0x7e6 <vfprintf+0x82>
 864:	98 2f       	mov	r25, r24
 866:	9f 7d       	andi	r25, 0xDF	; 223
 868:	95 54       	subi	r25, 0x45	; 69
 86a:	93 30       	cpi	r25, 0x03	; 3
 86c:	28 f4       	brcc	.+10     	; 0x878 <vfprintf+0x114>
 86e:	0c 5f       	subi	r16, 0xFC	; 252
 870:	1f 4f       	sbci	r17, 0xFF	; 255
 872:	ff e3       	ldi	r31, 0x3F	; 63
 874:	f9 83       	std	Y+1, r31	; 0x01
 876:	0d c0       	rjmp	.+26     	; 0x892 <vfprintf+0x12e>
 878:	83 36       	cpi	r24, 0x63	; 99
 87a:	31 f0       	breq	.+12     	; 0x888 <vfprintf+0x124>
 87c:	83 37       	cpi	r24, 0x73	; 115
 87e:	71 f0       	breq	.+28     	; 0x89c <vfprintf+0x138>
 880:	83 35       	cpi	r24, 0x53	; 83
 882:	09 f0       	breq	.+2      	; 0x886 <vfprintf+0x122>
 884:	57 c0       	rjmp	.+174    	; 0x934 <vfprintf+0x1d0>
 886:	21 c0       	rjmp	.+66     	; 0x8ca <vfprintf+0x166>
 888:	f8 01       	movw	r30, r16
 88a:	80 81       	ld	r24, Z
 88c:	89 83       	std	Y+1, r24	; 0x01
 88e:	0e 5f       	subi	r16, 0xFE	; 254
 890:	1f 4f       	sbci	r17, 0xFF	; 255
 892:	44 24       	eor	r4, r4
 894:	43 94       	inc	r4
 896:	51 2c       	mov	r5, r1
 898:	54 01       	movw	r10, r8
 89a:	14 c0       	rjmp	.+40     	; 0x8c4 <vfprintf+0x160>
 89c:	38 01       	movw	r6, r16
 89e:	f2 e0       	ldi	r31, 0x02	; 2
 8a0:	6f 0e       	add	r6, r31
 8a2:	71 1c       	adc	r7, r1
 8a4:	f8 01       	movw	r30, r16
 8a6:	a0 80       	ld	r10, Z
 8a8:	b1 80       	ldd	r11, Z+1	; 0x01
 8aa:	26 ff       	sbrs	r18, 6
 8ac:	03 c0       	rjmp	.+6      	; 0x8b4 <vfprintf+0x150>
 8ae:	65 2d       	mov	r22, r5
 8b0:	70 e0       	ldi	r23, 0x00	; 0
 8b2:	02 c0       	rjmp	.+4      	; 0x8b8 <vfprintf+0x154>
 8b4:	6f ef       	ldi	r22, 0xFF	; 255
 8b6:	7f ef       	ldi	r23, 0xFF	; 255
 8b8:	c5 01       	movw	r24, r10
 8ba:	2c 87       	std	Y+12, r18	; 0x0c
 8bc:	4c d1       	rcall	.+664    	; 0xb56 <strnlen>
 8be:	2c 01       	movw	r4, r24
 8c0:	83 01       	movw	r16, r6
 8c2:	2c 85       	ldd	r18, Y+12	; 0x0c
 8c4:	2f 77       	andi	r18, 0x7F	; 127
 8c6:	22 2e       	mov	r2, r18
 8c8:	16 c0       	rjmp	.+44     	; 0x8f6 <vfprintf+0x192>
 8ca:	38 01       	movw	r6, r16
 8cc:	f2 e0       	ldi	r31, 0x02	; 2
 8ce:	6f 0e       	add	r6, r31
 8d0:	71 1c       	adc	r7, r1
 8d2:	f8 01       	movw	r30, r16
 8d4:	a0 80       	ld	r10, Z
 8d6:	b1 80       	ldd	r11, Z+1	; 0x01
 8d8:	26 ff       	sbrs	r18, 6
 8da:	03 c0       	rjmp	.+6      	; 0x8e2 <vfprintf+0x17e>
 8dc:	65 2d       	mov	r22, r5
 8de:	70 e0       	ldi	r23, 0x00	; 0
 8e0:	02 c0       	rjmp	.+4      	; 0x8e6 <vfprintf+0x182>
 8e2:	6f ef       	ldi	r22, 0xFF	; 255
 8e4:	7f ef       	ldi	r23, 0xFF	; 255
 8e6:	c5 01       	movw	r24, r10
 8e8:	2c 87       	std	Y+12, r18	; 0x0c
 8ea:	2a d1       	rcall	.+596    	; 0xb40 <strnlen_P>
 8ec:	2c 01       	movw	r4, r24
 8ee:	2c 85       	ldd	r18, Y+12	; 0x0c
 8f0:	20 68       	ori	r18, 0x80	; 128
 8f2:	22 2e       	mov	r2, r18
 8f4:	83 01       	movw	r16, r6
 8f6:	23 fc       	sbrc	r2, 3
 8f8:	19 c0       	rjmp	.+50     	; 0x92c <vfprintf+0x1c8>
 8fa:	83 2d       	mov	r24, r3
 8fc:	90 e0       	ldi	r25, 0x00	; 0
 8fe:	48 16       	cp	r4, r24
 900:	59 06       	cpc	r5, r25
 902:	a0 f4       	brcc	.+40     	; 0x92c <vfprintf+0x1c8>
 904:	b7 01       	movw	r22, r14
 906:	80 e2       	ldi	r24, 0x20	; 32
 908:	90 e0       	ldi	r25, 0x00	; 0
 90a:	30 d1       	rcall	.+608    	; 0xb6c <fputc>
 90c:	3a 94       	dec	r3
 90e:	f5 cf       	rjmp	.-22     	; 0x8fa <vfprintf+0x196>
 910:	f5 01       	movw	r30, r10
 912:	27 fc       	sbrc	r2, 7
 914:	85 91       	lpm	r24, Z+
 916:	27 fe       	sbrs	r2, 7
 918:	81 91       	ld	r24, Z+
 91a:	5f 01       	movw	r10, r30
 91c:	b7 01       	movw	r22, r14
 91e:	90 e0       	ldi	r25, 0x00	; 0
 920:	25 d1       	rcall	.+586    	; 0xb6c <fputc>
 922:	31 10       	cpse	r3, r1
 924:	3a 94       	dec	r3
 926:	f1 e0       	ldi	r31, 0x01	; 1
 928:	4f 1a       	sub	r4, r31
 92a:	51 08       	sbc	r5, r1
 92c:	41 14       	cp	r4, r1
 92e:	51 04       	cpc	r5, r1
 930:	79 f7       	brne	.-34     	; 0x910 <vfprintf+0x1ac>
 932:	de c0       	rjmp	.+444    	; 0xaf0 <vfprintf+0x38c>
 934:	84 36       	cpi	r24, 0x64	; 100
 936:	11 f0       	breq	.+4      	; 0x93c <vfprintf+0x1d8>
 938:	89 36       	cpi	r24, 0x69	; 105
 93a:	31 f5       	brne	.+76     	; 0x988 <vfprintf+0x224>
 93c:	f8 01       	movw	r30, r16
 93e:	27 ff       	sbrs	r18, 7
 940:	07 c0       	rjmp	.+14     	; 0x950 <vfprintf+0x1ec>
 942:	60 81       	ld	r22, Z
 944:	71 81       	ldd	r23, Z+1	; 0x01
 946:	82 81       	ldd	r24, Z+2	; 0x02
 948:	93 81       	ldd	r25, Z+3	; 0x03
 94a:	0c 5f       	subi	r16, 0xFC	; 252
 94c:	1f 4f       	sbci	r17, 0xFF	; 255
 94e:	08 c0       	rjmp	.+16     	; 0x960 <vfprintf+0x1fc>
 950:	60 81       	ld	r22, Z
 952:	71 81       	ldd	r23, Z+1	; 0x01
 954:	88 27       	eor	r24, r24
 956:	77 fd       	sbrc	r23, 7
 958:	80 95       	com	r24
 95a:	98 2f       	mov	r25, r24
 95c:	0e 5f       	subi	r16, 0xFE	; 254
 95e:	1f 4f       	sbci	r17, 0xFF	; 255
 960:	2f 76       	andi	r18, 0x6F	; 111
 962:	b2 2e       	mov	r11, r18
 964:	97 ff       	sbrs	r25, 7
 966:	09 c0       	rjmp	.+18     	; 0x97a <vfprintf+0x216>
 968:	90 95       	com	r25
 96a:	80 95       	com	r24
 96c:	70 95       	com	r23
 96e:	61 95       	neg	r22
 970:	7f 4f       	sbci	r23, 0xFF	; 255
 972:	8f 4f       	sbci	r24, 0xFF	; 255
 974:	9f 4f       	sbci	r25, 0xFF	; 255
 976:	20 68       	ori	r18, 0x80	; 128
 978:	b2 2e       	mov	r11, r18
 97a:	2a e0       	ldi	r18, 0x0A	; 10
 97c:	30 e0       	ldi	r19, 0x00	; 0
 97e:	a4 01       	movw	r20, r8
 980:	27 d1       	rcall	.+590    	; 0xbd0 <__ultoa_invert>
 982:	a8 2e       	mov	r10, r24
 984:	a8 18       	sub	r10, r8
 986:	43 c0       	rjmp	.+134    	; 0xa0e <vfprintf+0x2aa>
 988:	85 37       	cpi	r24, 0x75	; 117
 98a:	29 f4       	brne	.+10     	; 0x996 <vfprintf+0x232>
 98c:	2f 7e       	andi	r18, 0xEF	; 239
 98e:	b2 2e       	mov	r11, r18
 990:	2a e0       	ldi	r18, 0x0A	; 10
 992:	30 e0       	ldi	r19, 0x00	; 0
 994:	25 c0       	rjmp	.+74     	; 0x9e0 <vfprintf+0x27c>
 996:	f2 2f       	mov	r31, r18
 998:	f9 7f       	andi	r31, 0xF9	; 249
 99a:	bf 2e       	mov	r11, r31
 99c:	8f 36       	cpi	r24, 0x6F	; 111
 99e:	c1 f0       	breq	.+48     	; 0x9d0 <vfprintf+0x26c>
 9a0:	18 f4       	brcc	.+6      	; 0x9a8 <vfprintf+0x244>
 9a2:	88 35       	cpi	r24, 0x58	; 88
 9a4:	79 f0       	breq	.+30     	; 0x9c4 <vfprintf+0x260>
 9a6:	ad c0       	rjmp	.+346    	; 0xb02 <vfprintf+0x39e>
 9a8:	80 37       	cpi	r24, 0x70	; 112
 9aa:	19 f0       	breq	.+6      	; 0x9b2 <vfprintf+0x24e>
 9ac:	88 37       	cpi	r24, 0x78	; 120
 9ae:	21 f0       	breq	.+8      	; 0x9b8 <vfprintf+0x254>
 9b0:	a8 c0       	rjmp	.+336    	; 0xb02 <vfprintf+0x39e>
 9b2:	2f 2f       	mov	r18, r31
 9b4:	20 61       	ori	r18, 0x10	; 16
 9b6:	b2 2e       	mov	r11, r18
 9b8:	b4 fe       	sbrs	r11, 4
 9ba:	0d c0       	rjmp	.+26     	; 0x9d6 <vfprintf+0x272>
 9bc:	8b 2d       	mov	r24, r11
 9be:	84 60       	ori	r24, 0x04	; 4
 9c0:	b8 2e       	mov	r11, r24
 9c2:	09 c0       	rjmp	.+18     	; 0x9d6 <vfprintf+0x272>
 9c4:	24 ff       	sbrs	r18, 4
 9c6:	0a c0       	rjmp	.+20     	; 0x9dc <vfprintf+0x278>
 9c8:	9f 2f       	mov	r25, r31
 9ca:	96 60       	ori	r25, 0x06	; 6
 9cc:	b9 2e       	mov	r11, r25
 9ce:	06 c0       	rjmp	.+12     	; 0x9dc <vfprintf+0x278>
 9d0:	28 e0       	ldi	r18, 0x08	; 8
 9d2:	30 e0       	ldi	r19, 0x00	; 0
 9d4:	05 c0       	rjmp	.+10     	; 0x9e0 <vfprintf+0x27c>
 9d6:	20 e1       	ldi	r18, 0x10	; 16
 9d8:	30 e0       	ldi	r19, 0x00	; 0
 9da:	02 c0       	rjmp	.+4      	; 0x9e0 <vfprintf+0x27c>
 9dc:	20 e1       	ldi	r18, 0x10	; 16
 9de:	32 e0       	ldi	r19, 0x02	; 2
 9e0:	f8 01       	movw	r30, r16
 9e2:	b7 fe       	sbrs	r11, 7
 9e4:	07 c0       	rjmp	.+14     	; 0x9f4 <vfprintf+0x290>
 9e6:	60 81       	ld	r22, Z
 9e8:	71 81       	ldd	r23, Z+1	; 0x01
 9ea:	82 81       	ldd	r24, Z+2	; 0x02
 9ec:	93 81       	ldd	r25, Z+3	; 0x03
 9ee:	0c 5f       	subi	r16, 0xFC	; 252
 9f0:	1f 4f       	sbci	r17, 0xFF	; 255
 9f2:	06 c0       	rjmp	.+12     	; 0xa00 <vfprintf+0x29c>
 9f4:	60 81       	ld	r22, Z
 9f6:	71 81       	ldd	r23, Z+1	; 0x01
 9f8:	80 e0       	ldi	r24, 0x00	; 0
 9fa:	90 e0       	ldi	r25, 0x00	; 0
 9fc:	0e 5f       	subi	r16, 0xFE	; 254
 9fe:	1f 4f       	sbci	r17, 0xFF	; 255
 a00:	a4 01       	movw	r20, r8
 a02:	e6 d0       	rcall	.+460    	; 0xbd0 <__ultoa_invert>
 a04:	a8 2e       	mov	r10, r24
 a06:	a8 18       	sub	r10, r8
 a08:	fb 2d       	mov	r31, r11
 a0a:	ff 77       	andi	r31, 0x7F	; 127
 a0c:	bf 2e       	mov	r11, r31
 a0e:	b6 fe       	sbrs	r11, 6
 a10:	0b c0       	rjmp	.+22     	; 0xa28 <vfprintf+0x2c4>
 a12:	2b 2d       	mov	r18, r11
 a14:	2e 7f       	andi	r18, 0xFE	; 254
 a16:	a5 14       	cp	r10, r5
 a18:	50 f4       	brcc	.+20     	; 0xa2e <vfprintf+0x2ca>
 a1a:	b4 fe       	sbrs	r11, 4
 a1c:	0a c0       	rjmp	.+20     	; 0xa32 <vfprintf+0x2ce>
 a1e:	b2 fc       	sbrc	r11, 2
 a20:	08 c0       	rjmp	.+16     	; 0xa32 <vfprintf+0x2ce>
 a22:	2b 2d       	mov	r18, r11
 a24:	2e 7e       	andi	r18, 0xEE	; 238
 a26:	05 c0       	rjmp	.+10     	; 0xa32 <vfprintf+0x2ce>
 a28:	7a 2c       	mov	r7, r10
 a2a:	2b 2d       	mov	r18, r11
 a2c:	03 c0       	rjmp	.+6      	; 0xa34 <vfprintf+0x2d0>
 a2e:	7a 2c       	mov	r7, r10
 a30:	01 c0       	rjmp	.+2      	; 0xa34 <vfprintf+0x2d0>
 a32:	75 2c       	mov	r7, r5
 a34:	24 ff       	sbrs	r18, 4
 a36:	0d c0       	rjmp	.+26     	; 0xa52 <vfprintf+0x2ee>
 a38:	fe 01       	movw	r30, r28
 a3a:	ea 0d       	add	r30, r10
 a3c:	f1 1d       	adc	r31, r1
 a3e:	80 81       	ld	r24, Z
 a40:	80 33       	cpi	r24, 0x30	; 48
 a42:	11 f4       	brne	.+4      	; 0xa48 <vfprintf+0x2e4>
 a44:	29 7e       	andi	r18, 0xE9	; 233
 a46:	09 c0       	rjmp	.+18     	; 0xa5a <vfprintf+0x2f6>
 a48:	22 ff       	sbrs	r18, 2
 a4a:	06 c0       	rjmp	.+12     	; 0xa58 <vfprintf+0x2f4>
 a4c:	73 94       	inc	r7
 a4e:	73 94       	inc	r7
 a50:	04 c0       	rjmp	.+8      	; 0xa5a <vfprintf+0x2f6>
 a52:	82 2f       	mov	r24, r18
 a54:	86 78       	andi	r24, 0x86	; 134
 a56:	09 f0       	breq	.+2      	; 0xa5a <vfprintf+0x2f6>
 a58:	73 94       	inc	r7
 a5a:	23 fd       	sbrc	r18, 3
 a5c:	12 c0       	rjmp	.+36     	; 0xa82 <vfprintf+0x31e>
 a5e:	20 ff       	sbrs	r18, 0
 a60:	06 c0       	rjmp	.+12     	; 0xa6e <vfprintf+0x30a>
 a62:	5a 2c       	mov	r5, r10
 a64:	73 14       	cp	r7, r3
 a66:	18 f4       	brcc	.+6      	; 0xa6e <vfprintf+0x30a>
 a68:	53 0c       	add	r5, r3
 a6a:	57 18       	sub	r5, r7
 a6c:	73 2c       	mov	r7, r3
 a6e:	73 14       	cp	r7, r3
 a70:	60 f4       	brcc	.+24     	; 0xa8a <vfprintf+0x326>
 a72:	b7 01       	movw	r22, r14
 a74:	80 e2       	ldi	r24, 0x20	; 32
 a76:	90 e0       	ldi	r25, 0x00	; 0
 a78:	2c 87       	std	Y+12, r18	; 0x0c
 a7a:	78 d0       	rcall	.+240    	; 0xb6c <fputc>
 a7c:	73 94       	inc	r7
 a7e:	2c 85       	ldd	r18, Y+12	; 0x0c
 a80:	f6 cf       	rjmp	.-20     	; 0xa6e <vfprintf+0x30a>
 a82:	73 14       	cp	r7, r3
 a84:	10 f4       	brcc	.+4      	; 0xa8a <vfprintf+0x326>
 a86:	37 18       	sub	r3, r7
 a88:	01 c0       	rjmp	.+2      	; 0xa8c <vfprintf+0x328>
 a8a:	31 2c       	mov	r3, r1
 a8c:	24 ff       	sbrs	r18, 4
 a8e:	11 c0       	rjmp	.+34     	; 0xab2 <vfprintf+0x34e>
 a90:	b7 01       	movw	r22, r14
 a92:	80 e3       	ldi	r24, 0x30	; 48
 a94:	90 e0       	ldi	r25, 0x00	; 0
 a96:	2c 87       	std	Y+12, r18	; 0x0c
 a98:	69 d0       	rcall	.+210    	; 0xb6c <fputc>
 a9a:	2c 85       	ldd	r18, Y+12	; 0x0c
 a9c:	22 ff       	sbrs	r18, 2
 a9e:	16 c0       	rjmp	.+44     	; 0xacc <vfprintf+0x368>
 aa0:	21 ff       	sbrs	r18, 1
 aa2:	03 c0       	rjmp	.+6      	; 0xaaa <vfprintf+0x346>
 aa4:	88 e5       	ldi	r24, 0x58	; 88
 aa6:	90 e0       	ldi	r25, 0x00	; 0
 aa8:	02 c0       	rjmp	.+4      	; 0xaae <vfprintf+0x34a>
 aaa:	88 e7       	ldi	r24, 0x78	; 120
 aac:	90 e0       	ldi	r25, 0x00	; 0
 aae:	b7 01       	movw	r22, r14
 ab0:	0c c0       	rjmp	.+24     	; 0xaca <vfprintf+0x366>
 ab2:	82 2f       	mov	r24, r18
 ab4:	86 78       	andi	r24, 0x86	; 134
 ab6:	51 f0       	breq	.+20     	; 0xacc <vfprintf+0x368>
 ab8:	21 fd       	sbrc	r18, 1
 aba:	02 c0       	rjmp	.+4      	; 0xac0 <vfprintf+0x35c>
 abc:	80 e2       	ldi	r24, 0x20	; 32
 abe:	01 c0       	rjmp	.+2      	; 0xac2 <vfprintf+0x35e>
 ac0:	8b e2       	ldi	r24, 0x2B	; 43
 ac2:	27 fd       	sbrc	r18, 7
 ac4:	8d e2       	ldi	r24, 0x2D	; 45
 ac6:	b7 01       	movw	r22, r14
 ac8:	90 e0       	ldi	r25, 0x00	; 0
 aca:	50 d0       	rcall	.+160    	; 0xb6c <fputc>
 acc:	a5 14       	cp	r10, r5
 ace:	30 f4       	brcc	.+12     	; 0xadc <vfprintf+0x378>
 ad0:	b7 01       	movw	r22, r14
 ad2:	80 e3       	ldi	r24, 0x30	; 48
 ad4:	90 e0       	ldi	r25, 0x00	; 0
 ad6:	4a d0       	rcall	.+148    	; 0xb6c <fputc>
 ad8:	5a 94       	dec	r5
 ada:	f8 cf       	rjmp	.-16     	; 0xacc <vfprintf+0x368>
 adc:	aa 94       	dec	r10
 ade:	f4 01       	movw	r30, r8
 ae0:	ea 0d       	add	r30, r10
 ae2:	f1 1d       	adc	r31, r1
 ae4:	80 81       	ld	r24, Z
 ae6:	b7 01       	movw	r22, r14
 ae8:	90 e0       	ldi	r25, 0x00	; 0
 aea:	40 d0       	rcall	.+128    	; 0xb6c <fputc>
 aec:	a1 10       	cpse	r10, r1
 aee:	f6 cf       	rjmp	.-20     	; 0xadc <vfprintf+0x378>
 af0:	33 20       	and	r3, r3
 af2:	09 f4       	brne	.+2      	; 0xaf6 <vfprintf+0x392>
 af4:	5d ce       	rjmp	.-838    	; 0x7b0 <vfprintf+0x4c>
 af6:	b7 01       	movw	r22, r14
 af8:	80 e2       	ldi	r24, 0x20	; 32
 afa:	90 e0       	ldi	r25, 0x00	; 0
 afc:	37 d0       	rcall	.+110    	; 0xb6c <fputc>
 afe:	3a 94       	dec	r3
 b00:	f7 cf       	rjmp	.-18     	; 0xaf0 <vfprintf+0x38c>
 b02:	f7 01       	movw	r30, r14
 b04:	86 81       	ldd	r24, Z+6	; 0x06
 b06:	97 81       	ldd	r25, Z+7	; 0x07
 b08:	02 c0       	rjmp	.+4      	; 0xb0e <vfprintf+0x3aa>
 b0a:	8f ef       	ldi	r24, 0xFF	; 255
 b0c:	9f ef       	ldi	r25, 0xFF	; 255
 b0e:	2c 96       	adiw	r28, 0x0c	; 12
 b10:	0f b6       	in	r0, 0x3f	; 63
 b12:	f8 94       	cli
 b14:	de bf       	out	0x3e, r29	; 62
 b16:	0f be       	out	0x3f, r0	; 63
 b18:	cd bf       	out	0x3d, r28	; 61
 b1a:	df 91       	pop	r29
 b1c:	cf 91       	pop	r28
 b1e:	1f 91       	pop	r17
 b20:	0f 91       	pop	r16
 b22:	ff 90       	pop	r15
 b24:	ef 90       	pop	r14
 b26:	df 90       	pop	r13
 b28:	cf 90       	pop	r12
 b2a:	bf 90       	pop	r11
 b2c:	af 90       	pop	r10
 b2e:	9f 90       	pop	r9
 b30:	8f 90       	pop	r8
 b32:	7f 90       	pop	r7
 b34:	6f 90       	pop	r6
 b36:	5f 90       	pop	r5
 b38:	4f 90       	pop	r4
 b3a:	3f 90       	pop	r3
 b3c:	2f 90       	pop	r2
 b3e:	08 95       	ret

00000b40 <strnlen_P>:
 b40:	fc 01       	movw	r30, r24
 b42:	05 90       	lpm	r0, Z+
 b44:	61 50       	subi	r22, 0x01	; 1
 b46:	70 40       	sbci	r23, 0x00	; 0
 b48:	01 10       	cpse	r0, r1
 b4a:	d8 f7       	brcc	.-10     	; 0xb42 <strnlen_P+0x2>
 b4c:	80 95       	com	r24
 b4e:	90 95       	com	r25
 b50:	8e 0f       	add	r24, r30
 b52:	9f 1f       	adc	r25, r31
 b54:	08 95       	ret

00000b56 <strnlen>:
 b56:	fc 01       	movw	r30, r24
 b58:	61 50       	subi	r22, 0x01	; 1
 b5a:	70 40       	sbci	r23, 0x00	; 0
 b5c:	01 90       	ld	r0, Z+
 b5e:	01 10       	cpse	r0, r1
 b60:	d8 f7       	brcc	.-10     	; 0xb58 <strnlen+0x2>
 b62:	80 95       	com	r24
 b64:	90 95       	com	r25
 b66:	8e 0f       	add	r24, r30
 b68:	9f 1f       	adc	r25, r31
 b6a:	08 95       	ret

00000b6c <fputc>:
 b6c:	0f 93       	push	r16
 b6e:	1f 93       	push	r17
 b70:	cf 93       	push	r28
 b72:	df 93       	push	r29
 b74:	18 2f       	mov	r17, r24
 b76:	09 2f       	mov	r16, r25
 b78:	eb 01       	movw	r28, r22
 b7a:	8b 81       	ldd	r24, Y+3	; 0x03
 b7c:	81 fd       	sbrc	r24, 1
 b7e:	03 c0       	rjmp	.+6      	; 0xb86 <fputc+0x1a>
 b80:	8f ef       	ldi	r24, 0xFF	; 255
 b82:	9f ef       	ldi	r25, 0xFF	; 255
 b84:	20 c0       	rjmp	.+64     	; 0xbc6 <fputc+0x5a>
 b86:	82 ff       	sbrs	r24, 2
 b88:	10 c0       	rjmp	.+32     	; 0xbaa <fputc+0x3e>
 b8a:	4e 81       	ldd	r20, Y+6	; 0x06
 b8c:	5f 81       	ldd	r21, Y+7	; 0x07
 b8e:	2c 81       	ldd	r18, Y+4	; 0x04
 b90:	3d 81       	ldd	r19, Y+5	; 0x05
 b92:	42 17       	cp	r20, r18
 b94:	53 07       	cpc	r21, r19
 b96:	7c f4       	brge	.+30     	; 0xbb6 <fputc+0x4a>
 b98:	e8 81       	ld	r30, Y
 b9a:	f9 81       	ldd	r31, Y+1	; 0x01
 b9c:	9f 01       	movw	r18, r30
 b9e:	2f 5f       	subi	r18, 0xFF	; 255
 ba0:	3f 4f       	sbci	r19, 0xFF	; 255
 ba2:	39 83       	std	Y+1, r19	; 0x01
 ba4:	28 83       	st	Y, r18
 ba6:	10 83       	st	Z, r17
 ba8:	06 c0       	rjmp	.+12     	; 0xbb6 <fputc+0x4a>
 baa:	e8 85       	ldd	r30, Y+8	; 0x08
 bac:	f9 85       	ldd	r31, Y+9	; 0x09
 bae:	81 2f       	mov	r24, r17
 bb0:	09 95       	icall
 bb2:	89 2b       	or	r24, r25
 bb4:	29 f7       	brne	.-54     	; 0xb80 <fputc+0x14>
 bb6:	2e 81       	ldd	r18, Y+6	; 0x06
 bb8:	3f 81       	ldd	r19, Y+7	; 0x07
 bba:	2f 5f       	subi	r18, 0xFF	; 255
 bbc:	3f 4f       	sbci	r19, 0xFF	; 255
 bbe:	3f 83       	std	Y+7, r19	; 0x07
 bc0:	2e 83       	std	Y+6, r18	; 0x06
 bc2:	81 2f       	mov	r24, r17
 bc4:	90 2f       	mov	r25, r16
 bc6:	df 91       	pop	r29
 bc8:	cf 91       	pop	r28
 bca:	1f 91       	pop	r17
 bcc:	0f 91       	pop	r16
 bce:	08 95       	ret

00000bd0 <__ultoa_invert>:
 bd0:	fa 01       	movw	r30, r20
 bd2:	aa 27       	eor	r26, r26
 bd4:	28 30       	cpi	r18, 0x08	; 8
 bd6:	51 f1       	breq	.+84     	; 0xc2c <__ultoa_invert+0x5c>
 bd8:	20 31       	cpi	r18, 0x10	; 16
 bda:	81 f1       	breq	.+96     	; 0xc3c <__ultoa_invert+0x6c>
 bdc:	e8 94       	clt
 bde:	6f 93       	push	r22
 be0:	6e 7f       	andi	r22, 0xFE	; 254
 be2:	6e 5f       	subi	r22, 0xFE	; 254
 be4:	7f 4f       	sbci	r23, 0xFF	; 255
 be6:	8f 4f       	sbci	r24, 0xFF	; 255
 be8:	9f 4f       	sbci	r25, 0xFF	; 255
 bea:	af 4f       	sbci	r26, 0xFF	; 255
 bec:	b1 e0       	ldi	r27, 0x01	; 1
 bee:	3e d0       	rcall	.+124    	; 0xc6c <__ultoa_invert+0x9c>
 bf0:	b4 e0       	ldi	r27, 0x04	; 4
 bf2:	3c d0       	rcall	.+120    	; 0xc6c <__ultoa_invert+0x9c>
 bf4:	67 0f       	add	r22, r23
 bf6:	78 1f       	adc	r23, r24
 bf8:	89 1f       	adc	r24, r25
 bfa:	9a 1f       	adc	r25, r26
 bfc:	a1 1d       	adc	r26, r1
 bfe:	68 0f       	add	r22, r24
 c00:	79 1f       	adc	r23, r25
 c02:	8a 1f       	adc	r24, r26
 c04:	91 1d       	adc	r25, r1
 c06:	a1 1d       	adc	r26, r1
 c08:	6a 0f       	add	r22, r26
 c0a:	71 1d       	adc	r23, r1
 c0c:	81 1d       	adc	r24, r1
 c0e:	91 1d       	adc	r25, r1
 c10:	a1 1d       	adc	r26, r1
 c12:	20 d0       	rcall	.+64     	; 0xc54 <__ultoa_invert+0x84>
 c14:	09 f4       	brne	.+2      	; 0xc18 <__ultoa_invert+0x48>
 c16:	68 94       	set
 c18:	3f 91       	pop	r19
 c1a:	2a e0       	ldi	r18, 0x0A	; 10
 c1c:	26 9f       	mul	r18, r22
 c1e:	11 24       	eor	r1, r1
 c20:	30 19       	sub	r19, r0
 c22:	30 5d       	subi	r19, 0xD0	; 208
 c24:	31 93       	st	Z+, r19
 c26:	de f6       	brtc	.-74     	; 0xbde <__ultoa_invert+0xe>
 c28:	cf 01       	movw	r24, r30
 c2a:	08 95       	ret
 c2c:	46 2f       	mov	r20, r22
 c2e:	47 70       	andi	r20, 0x07	; 7
 c30:	40 5d       	subi	r20, 0xD0	; 208
 c32:	41 93       	st	Z+, r20
 c34:	b3 e0       	ldi	r27, 0x03	; 3
 c36:	0f d0       	rcall	.+30     	; 0xc56 <__ultoa_invert+0x86>
 c38:	c9 f7       	brne	.-14     	; 0xc2c <__ultoa_invert+0x5c>
 c3a:	f6 cf       	rjmp	.-20     	; 0xc28 <__ultoa_invert+0x58>
 c3c:	46 2f       	mov	r20, r22
 c3e:	4f 70       	andi	r20, 0x0F	; 15
 c40:	40 5d       	subi	r20, 0xD0	; 208
 c42:	4a 33       	cpi	r20, 0x3A	; 58
 c44:	18 f0       	brcs	.+6      	; 0xc4c <__ultoa_invert+0x7c>
 c46:	49 5d       	subi	r20, 0xD9	; 217
 c48:	31 fd       	sbrc	r19, 1
 c4a:	40 52       	subi	r20, 0x20	; 32
 c4c:	41 93       	st	Z+, r20
 c4e:	02 d0       	rcall	.+4      	; 0xc54 <__ultoa_invert+0x84>
 c50:	a9 f7       	brne	.-22     	; 0xc3c <__ultoa_invert+0x6c>
 c52:	ea cf       	rjmp	.-44     	; 0xc28 <__ultoa_invert+0x58>
 c54:	b4 e0       	ldi	r27, 0x04	; 4
 c56:	a6 95       	lsr	r26
 c58:	97 95       	ror	r25
 c5a:	87 95       	ror	r24
 c5c:	77 95       	ror	r23
 c5e:	67 95       	ror	r22
 c60:	ba 95       	dec	r27
 c62:	c9 f7       	brne	.-14     	; 0xc56 <__ultoa_invert+0x86>
 c64:	00 97       	sbiw	r24, 0x00	; 0
 c66:	61 05       	cpc	r22, r1
 c68:	71 05       	cpc	r23, r1
 c6a:	08 95       	ret
 c6c:	9b 01       	movw	r18, r22
 c6e:	ac 01       	movw	r20, r24
 c70:	0a 2e       	mov	r0, r26
 c72:	06 94       	lsr	r0
 c74:	57 95       	ror	r21
 c76:	47 95       	ror	r20
 c78:	37 95       	ror	r19
 c7a:	27 95       	ror	r18
 c7c:	ba 95       	dec	r27
 c7e:	c9 f7       	brne	.-14     	; 0xc72 <__ultoa_invert+0xa2>
 c80:	62 0f       	add	r22, r18
 c82:	73 1f       	adc	r23, r19
 c84:	84 1f       	adc	r24, r20
 c86:	95 1f       	adc	r25, r21
 c88:	a0 1d       	adc	r26, r0
 c8a:	08 95       	ret

00000c8c <_exit>:
 c8c:	f8 94       	cli

00000c8e <__stop_program>:
 c8e:	ff cf       	rjmp	.-2      	; 0xc8e <__stop_program>

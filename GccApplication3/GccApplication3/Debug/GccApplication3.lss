
GccApplication3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000012  00800100  00000a22  00000ab6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000a22  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000053  00800112  00800112  00000ac8  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000ac8  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000178  00000000  00000000  00000b24  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000012a4  00000000  00000000  00000c9c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000596  00000000  00000000  00001f40  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000ba1  00000000  00000000  000024d6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000003e0  00000000  00000000  00003078  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000740  00000000  00000000  00003458  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000c50  00000000  00000000  00003b98  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000138  00000000  00000000  000047e8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	82 c1       	rjmp	.+772    	; 0x32a <__vector_9>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e2 e2       	ldi	r30, 0x22	; 34
  a0:	fa e0       	ldi	r31, 0x0A	; 10
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a2 31       	cpi	r26, 0x12	; 18
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a2 e1       	ldi	r26, 0x12	; 18
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a5 36       	cpi	r26, 0x65	; 101
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	02 d0       	rcall	.+4      	; 0xc8 <main>
  c4:	ac c4       	rjmp	.+2392   	; 0xa1e <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <main>:
 */ 
#include "lcd.h"
#include "util.h"

void main() {
	lcd_init();
  c8:	39 d0       	rcall	.+114    	; 0x13c <lcd_init>
	//init_push_buttons();
	shaft_encoder_init();
  ca:	46 d1       	rcall	.+652    	; 0x358 <shaft_encoder_init>

	while(1) { // loop indefinitely
		char button = read_shaft_encoder();
		lprintf("Button: %d", button);
  cc:	c7 e0       	ldi	r28, 0x07	; 7
  ce:	d1 e0       	ldi	r29, 0x01	; 1
	lcd_init();
	//init_push_buttons();
	shaft_encoder_init();

	while(1) { // loop indefinitely
		char button = read_shaft_encoder();
  d0:	4a d1       	rcall	.+660    	; 0x366 <read_shaft_encoder>
		lprintf("Button: %d", button);
  d2:	08 2f       	mov	r16, r24
  d4:	10 e0       	ldi	r17, 0x00	; 0
  d6:	1f 92       	push	r1
  d8:	8f 93       	push	r24
  da:	df 93       	push	r29
  dc:	cf 93       	push	r28
  de:	7f d0       	rcall	.+254    	; 0x1de <lprintf>
		move_stepper_motor_by_step(100, button);
  e0:	b8 01       	movw	r22, r16
  e2:	84 e6       	ldi	r24, 0x64	; 100
  e4:	90 e0       	ldi	r25, 0x00	; 0
  e6:	55 d1       	rcall	.+682    	; 0x392 <move_stepper_motor_by_step>
  e8:	0f 90       	pop	r0
  ea:	0f 90       	pop	r0
  ec:	0f 90       	pop	r0
  ee:	0f 90       	pop	r0
  f0:	ef cf       	rjmp	.-34     	; 0xd0 <main+0x8>

000000f2 <lcd_toggle_clear>:
	int i;

	for (i=0;i<size;i++) {		
		lcd_putc(string[i]);
	}
}
  f2:	de 9a       	sbi	0x1b, 6	; 27
  f4:	90 e0       	ldi	r25, 0x00	; 0
  f6:	03 d1       	rcall	.+518    	; 0x2fe <wait_ms>
  f8:	de 98       	cbi	0x1b, 6	; 27
  fa:	8b b3       	in	r24, 0x1b	; 27
  fc:	80 7f       	andi	r24, 0xF0	; 240
  fe:	8b bb       	out	0x1b, r24	; 27
 100:	08 95       	ret

00000102 <lcd_command>:
 102:	cf 93       	push	r28
 104:	c8 2f       	mov	r28, r24
 106:	dc 98       	cbi	0x1b, 4	; 27
 108:	8b b3       	in	r24, 0x1b	; 27
 10a:	9c 2f       	mov	r25, r28
 10c:	92 95       	swap	r25
 10e:	9f 70       	andi	r25, 0x0F	; 15
 110:	89 2b       	or	r24, r25
 112:	8b bb       	out	0x1b, r24	; 27
 114:	82 e0       	ldi	r24, 0x02	; 2
 116:	ed df       	rcall	.-38     	; 0xf2 <lcd_toggle_clear>
 118:	8b b3       	in	r24, 0x1b	; 27
 11a:	cf 70       	andi	r28, 0x0F	; 15
 11c:	c8 2b       	or	r28, r24
 11e:	cb bb       	out	0x1b, r28	; 27
 120:	82 e0       	ldi	r24, 0x02	; 2
 122:	e7 df       	rcall	.-50     	; 0xf2 <lcd_toggle_clear>
 124:	dc 9a       	sbi	0x1b, 4	; 27
 126:	cf 91       	pop	r28
 128:	08 95       	ret

0000012a <lcd_clear>:
 12a:	81 e0       	ldi	r24, 0x01	; 1
 12c:	ea df       	rcall	.-44     	; 0x102 <lcd_command>
 12e:	81 e0       	ldi	r24, 0x01	; 1
 130:	90 e0       	ldi	r25, 0x00	; 0
 132:	e5 c0       	rjmp	.+458    	; 0x2fe <wait_ms>
 134:	08 95       	ret

00000136 <lcd_home_line1>:
 136:	82 e0       	ldi	r24, 0x02	; 2
 138:	e4 cf       	rjmp	.-56     	; 0x102 <lcd_command>
 13a:	08 95       	ret

0000013c <lcd_init>:
 13c:	8f ef       	ldi	r24, 0xFF	; 255
 13e:	8a bb       	out	0x1a, r24	; 26
 140:	83 e0       	ldi	r24, 0x03	; 3
 142:	8b bb       	out	0x1b, r24	; 27
 144:	de 9a       	sbi	0x1b, 6	; 27
 146:	81 e0       	ldi	r24, 0x01	; 1
 148:	90 e0       	ldi	r25, 0x00	; 0
 14a:	d9 d0       	rcall	.+434    	; 0x2fe <wait_ms>
 14c:	de 98       	cbi	0x1b, 6	; 27
 14e:	85 e0       	ldi	r24, 0x05	; 5
 150:	90 e0       	ldi	r25, 0x00	; 0
 152:	d5 d0       	rcall	.+426    	; 0x2fe <wait_ms>
 154:	de 9a       	sbi	0x1b, 6	; 27
 156:	81 e0       	ldi	r24, 0x01	; 1
 158:	90 e0       	ldi	r25, 0x00	; 0
 15a:	d1 d0       	rcall	.+418    	; 0x2fe <wait_ms>
 15c:	de 98       	cbi	0x1b, 6	; 27
 15e:	de 9a       	sbi	0x1b, 6	; 27
 160:	81 e0       	ldi	r24, 0x01	; 1
 162:	90 e0       	ldi	r25, 0x00	; 0
 164:	cc d0       	rcall	.+408    	; 0x2fe <wait_ms>
 166:	de 98       	cbi	0x1b, 6	; 27
 168:	82 e0       	ldi	r24, 0x02	; 2
 16a:	8b bb       	out	0x1b, r24	; 27
 16c:	81 e0       	ldi	r24, 0x01	; 1
 16e:	c1 df       	rcall	.-126    	; 0xf2 <lcd_toggle_clear>
 170:	8b b3       	in	r24, 0x1b	; 27
 172:	8b bb       	out	0x1b, r24	; 27
 174:	81 e0       	ldi	r24, 0x01	; 1
 176:	bd df       	rcall	.-134    	; 0xf2 <lcd_toggle_clear>
 178:	8b b3       	in	r24, 0x1b	; 27
 17a:	8e 60       	ori	r24, 0x0E	; 14
 17c:	8b bb       	out	0x1b, r24	; 27
 17e:	81 e0       	ldi	r24, 0x01	; 1
 180:	b8 df       	rcall	.-144    	; 0xf2 <lcd_toggle_clear>
 182:	8b b3       	in	r24, 0x1b	; 27
 184:	8b bb       	out	0x1b, r24	; 27
 186:	81 e0       	ldi	r24, 0x01	; 1
 188:	b4 df       	rcall	.-152    	; 0xf2 <lcd_toggle_clear>
 18a:	8b b3       	in	r24, 0x1b	; 27
 18c:	86 60       	ori	r24, 0x06	; 6
 18e:	8b bb       	out	0x1b, r24	; 27
 190:	81 e0       	ldi	r24, 0x01	; 1
 192:	af df       	rcall	.-162    	; 0xf2 <lcd_toggle_clear>
 194:	8b b3       	in	r24, 0x1b	; 27
 196:	8b bb       	out	0x1b, r24	; 27
 198:	81 e0       	ldi	r24, 0x01	; 1
 19a:	ab df       	rcall	.-170    	; 0xf2 <lcd_toggle_clear>
 19c:	d8 9a       	sbi	0x1b, 0	; 27
 19e:	81 e0       	ldi	r24, 0x01	; 1
 1a0:	a8 df       	rcall	.-176    	; 0xf2 <lcd_toggle_clear>
 1a2:	dc 9a       	sbi	0x1b, 4	; 27
 1a4:	c8 cf       	rjmp	.-112    	; 0x136 <lcd_home_line1>
 1a6:	08 95       	ret

000001a8 <lcd_home_line2>:
 1a8:	80 ec       	ldi	r24, 0xC0	; 192
 1aa:	ab cf       	rjmp	.-170    	; 0x102 <lcd_command>
 1ac:	08 95       	ret

000001ae <lcd_home_line3>:
 1ae:	84 e9       	ldi	r24, 0x94	; 148
 1b0:	a8 cf       	rjmp	.-176    	; 0x102 <lcd_command>
 1b2:	08 95       	ret

000001b4 <lcd_home_line4>:
 1b4:	84 ed       	ldi	r24, 0xD4	; 212
 1b6:	a5 cf       	rjmp	.-182    	; 0x102 <lcd_command>
 1b8:	08 95       	ret

000001ba <lcd_putc>:
 1ba:	cf 93       	push	r28
 1bc:	c8 2f       	mov	r28, r24
 1be:	8b b3       	in	r24, 0x1b	; 27
 1c0:	9c 2f       	mov	r25, r28
 1c2:	92 95       	swap	r25
 1c4:	9f 70       	andi	r25, 0x0F	; 15
 1c6:	89 2b       	or	r24, r25
 1c8:	8b bb       	out	0x1b, r24	; 27
 1ca:	81 e0       	ldi	r24, 0x01	; 1
 1cc:	92 df       	rcall	.-220    	; 0xf2 <lcd_toggle_clear>
 1ce:	8b b3       	in	r24, 0x1b	; 27
 1d0:	cf 70       	andi	r28, 0x0F	; 15
 1d2:	c8 2b       	or	r28, r24
 1d4:	cb bb       	out	0x1b, r28	; 27
 1d6:	81 e0       	ldi	r24, 0x01	; 1
 1d8:	8c df       	rcall	.-232    	; 0xf2 <lcd_toggle_clear>
 1da:	cf 91       	pop	r28
 1dc:	08 95       	ret

000001de <lprintf>:
 *
 * Code from this site was also used: http://www.ozzu.com/cpp-tutorials/tutorial-writing-custom-printf-wrapper-function-t89166.html
 * @author Kerrick Staley & Chad Nelson
 * @date 05/16/2012
 */
void lprintf(const char *format, ...) {
 1de:	cf 92       	push	r12
 1e0:	df 92       	push	r13
 1e2:	ef 92       	push	r14
 1e4:	ff 92       	push	r15
 1e6:	0f 93       	push	r16
 1e8:	1f 93       	push	r17
 1ea:	cf 93       	push	r28
 1ec:	df 93       	push	r29
 1ee:	cd b7       	in	r28, 0x3d	; 61
 1f0:	de b7       	in	r29, 0x3e	; 62
 1f2:	c1 55       	subi	r28, 0x51	; 81
 1f4:	d1 09       	sbc	r29, r1
 1f6:	0f b6       	in	r0, 0x3f	; 63
 1f8:	f8 94       	cli
 1fa:	de bf       	out	0x3e, r29	; 62
 1fc:	0f be       	out	0x3f, r0	; 63
 1fe:	cd bf       	out	0x3d, r28	; 61
 200:	fe 01       	movw	r30, r28
 202:	e4 5a       	subi	r30, 0xA4	; 164
 204:	ff 4f       	sbci	r31, 0xFF	; 255
 206:	41 91       	ld	r20, Z+
 208:	51 91       	ld	r21, Z+
	static char lastbuffer[LCD_TOTAL_CHARS + 1];

	char buffer[LCD_TOTAL_CHARS + 1];
	va_list arglist;
	va_start(arglist, format);
	vsnprintf(buffer, LCD_TOTAL_CHARS + 1, format, arglist);
 20a:	9f 01       	movw	r18, r30
 20c:	61 e5       	ldi	r22, 0x51	; 81
 20e:	70 e0       	ldi	r23, 0x00	; 0
 210:	ce 01       	movw	r24, r28
 212:	01 96       	adiw	r24, 0x01	; 1
 214:	38 d1       	rcall	.+624    	; 0x486 <vsnprintf>
	
	if (!strcmp(lastbuffer, buffer))
 216:	be 01       	movw	r22, r28
 218:	6f 5f       	subi	r22, 0xFF	; 255
 21a:	7f 4f       	sbci	r23, 0xFF	; 255
 21c:	82 e1       	ldi	r24, 0x12	; 18
 21e:	91 e0       	ldi	r25, 0x01	; 1
 220:	22 d1       	rcall	.+580    	; 0x466 <strcmp>
 222:	89 2b       	or	r24, r25
 224:	09 f4       	brne	.+2      	; 0x228 <lprintf+0x4a>
 226:	3f c0       	rjmp	.+126    	; 0x2a6 <lprintf+0xc8>
		return;
	
	strcpy(lastbuffer, buffer);
 228:	be 01       	movw	r22, r28
 22a:	6f 5f       	subi	r22, 0xFF	; 255
 22c:	7f 4f       	sbci	r23, 0xFF	; 255
 22e:	82 e1       	ldi	r24, 0x12	; 18
 230:	91 e0       	ldi	r25, 0x01	; 1
 232:	22 d1       	rcall	.+580    	; 0x478 <strcpy>
	lcd_clear();
 234:	7a df       	rcall	.-268    	; 0x12a <lcd_clear>
 236:	9e 01       	movw	r18, r28
 238:	2f 5f       	subi	r18, 0xFF	; 255
 23a:	3f 4f       	sbci	r19, 0xFF	; 255
 23c:	69 01       	movw	r12, r18
	char *str = buffer;
	int charnum = 0;
 23e:	00 e0       	ldi	r16, 0x00	; 0
 240:	10 e0       	ldi	r17, 0x00	; 0
	while (*str && charnum < LCD_TOTAL_CHARS) {
		if (*str == '\n') {
			/* fill remainder of line with spaces */
			charnum += LCD_WIDTH - charnum % LCD_WIDTH;
 242:	0f 2e       	mov	r0, r31
 244:	f4 e1       	ldi	r31, 0x14	; 20
 246:	ef 2e       	mov	r14, r31
 248:	f1 2c       	mov	r15, r1
 24a:	f0 2d       	mov	r31, r0
	
	strcpy(lastbuffer, buffer);
	lcd_clear();
	char *str = buffer;
	int charnum = 0;
	while (*str && charnum < LCD_TOTAL_CHARS) {
 24c:	24 c0       	rjmp	.+72     	; 0x296 <lprintf+0xb8>
		if (*str == '\n') {
 24e:	8a 30       	cpi	r24, 0x0A	; 10
 250:	49 f4       	brne	.+18     	; 0x264 <lprintf+0x86>
			/* fill remainder of line with spaces */
			charnum += LCD_WIDTH - charnum % LCD_WIDTH;
 252:	c8 01       	movw	r24, r16
 254:	b7 01       	movw	r22, r14
 256:	e0 d0       	rcall	.+448    	; 0x418 <__divmodhi4>
 258:	f7 01       	movw	r30, r14
 25a:	e8 1b       	sub	r30, r24
 25c:	f9 0b       	sbc	r31, r25
 25e:	0e 0f       	add	r16, r30
 260:	1f 1f       	adc	r17, r31
 262:	03 c0       	rjmp	.+6      	; 0x26a <lprintf+0x8c>
		} else {
			lcd_putc(*str);
 264:	aa df       	rcall	.-172    	; 0x1ba <lcd_putc>
			charnum++;
 266:	0f 5f       	subi	r16, 0xFF	; 255
 268:	1f 4f       	sbci	r17, 0xFF	; 255
		 * 0x54...0x68 : line 4
		 * 
		 * The cursor position must be reset at the end of every line, otherwise, after writing line 1, it writes line 3 and then nothingness
		 */
		
		if (charnum % LCD_WIDTH == 0) { 
 26a:	c8 01       	movw	r24, r16
 26c:	b7 01       	movw	r22, r14
 26e:	d4 d0       	rcall	.+424    	; 0x418 <__divmodhi4>
 270:	89 2b       	or	r24, r25
 272:	89 f4       	brne	.+34     	; 0x296 <lprintf+0xb8>
			switch (charnum / LCD_WIDTH) {
 274:	c8 01       	movw	r24, r16
 276:	b7 01       	movw	r22, r14
 278:	cf d0       	rcall	.+414    	; 0x418 <__divmodhi4>
 27a:	62 30       	cpi	r22, 0x02	; 2
 27c:	71 05       	cpc	r23, r1
 27e:	41 f0       	breq	.+16     	; 0x290 <lprintf+0xb2>
 280:	63 30       	cpi	r22, 0x03	; 3
 282:	71 05       	cpc	r23, r1
 284:	39 f0       	breq	.+14     	; 0x294 <lprintf+0xb6>
 286:	61 30       	cpi	r22, 0x01	; 1
 288:	71 05       	cpc	r23, r1
 28a:	29 f4       	brne	.+10     	; 0x296 <lprintf+0xb8>
			case 1:
				lcd_home_line2();
 28c:	8d df       	rcall	.-230    	; 0x1a8 <lcd_home_line2>
				break;
 28e:	03 c0       	rjmp	.+6      	; 0x296 <lprintf+0xb8>
			case 2:
				lcd_home_line3();
 290:	8e df       	rcall	.-228    	; 0x1ae <lcd_home_line3>
				break;
 292:	01 c0       	rjmp	.+2      	; 0x296 <lprintf+0xb8>
			case 3:
				lcd_home_line4();
 294:	8f df       	rcall	.-226    	; 0x1b4 <lcd_home_line4>
	
	strcpy(lastbuffer, buffer);
	lcd_clear();
	char *str = buffer;
	int charnum = 0;
	while (*str && charnum < LCD_TOTAL_CHARS) {
 296:	f6 01       	movw	r30, r12
 298:	81 91       	ld	r24, Z+
 29a:	6f 01       	movw	r12, r30
 29c:	88 23       	and	r24, r24
 29e:	19 f0       	breq	.+6      	; 0x2a6 <lprintf+0xc8>
 2a0:	00 35       	cpi	r16, 0x50	; 80
 2a2:	11 05       	cpc	r17, r1
 2a4:	a4 f2       	brlt	.-88     	; 0x24e <lprintf+0x70>
				lcd_home_line4();
			}
		}
	}
	va_end(arglist);
}
 2a6:	cf 5a       	subi	r28, 0xAF	; 175
 2a8:	df 4f       	sbci	r29, 0xFF	; 255
 2aa:	0f b6       	in	r0, 0x3f	; 63
 2ac:	f8 94       	cli
 2ae:	de bf       	out	0x3e, r29	; 62
 2b0:	0f be       	out	0x3f, r0	; 63
 2b2:	cd bf       	out	0x3d, r28	; 61
 2b4:	df 91       	pop	r29
 2b6:	cf 91       	pop	r28
 2b8:	1f 91       	pop	r17
 2ba:	0f 91       	pop	r16
 2bc:	ff 90       	pop	r15
 2be:	ef 90       	pop	r14
 2c0:	df 90       	pop	r13
 2c2:	cf 90       	pop	r12
 2c4:	08 95       	ret

000002c6 <timer2_start>:
/// Initialize PORTE to control the stepper motor
void stepper_init(void) {
	DDRE |= 0xF0;  	//Setting PE4-PE7 to output
	PORTE &= 0x8F;  //Initial postion (0b1000) PE4-PE7
	wait_ms(2);
	PORTE &= 0x0F;  //Clear PE4-PE7
 2c6:	10 92 64 01 	sts	0x0164, r1
 2ca:	10 92 63 01 	sts	0x0163, r1
 2ce:	81 11       	cpse	r24, r1
 2d0:	06 c0       	rjmp	.+12     	; 0x2de <timer2_start+0x18>
 2d2:	8b e0       	ldi	r24, 0x0B	; 11
 2d4:	85 bd       	out	0x25, r24	; 37
 2d6:	87 b7       	in	r24, 0x37	; 55
 2d8:	80 68       	ori	r24, 0x80	; 128
 2da:	87 bf       	out	0x37, r24	; 55
 2dc:	07 c0       	rjmp	.+14     	; 0x2ec <timer2_start+0x26>
 2de:	81 30       	cpi	r24, 0x01	; 1
 2e0:	29 f4       	brne	.+10     	; 0x2ec <timer2_start+0x26>
 2e2:	89 e0       	ldi	r24, 0x09	; 9
 2e4:	85 bd       	out	0x25, r24	; 37
 2e6:	87 b7       	in	r24, 0x37	; 55
 2e8:	80 68       	ori	r24, 0x80	; 128
 2ea:	87 bf       	out	0x37, r24	; 55
 2ec:	78 94       	sei
 2ee:	08 95       	ret

000002f0 <timer2_stop>:
 2f0:	87 b7       	in	r24, 0x37	; 55
 2f2:	8f 77       	andi	r24, 0x7F	; 127
 2f4:	87 bf       	out	0x37, r24	; 55
 2f6:	85 b5       	in	r24, 0x25	; 37
 2f8:	8f 77       	andi	r24, 0x7F	; 127
 2fa:	85 bd       	out	0x25, r24	; 37
 2fc:	08 95       	ret

000002fe <wait_ms>:
 2fe:	cf 93       	push	r28
 300:	df 93       	push	r29
 302:	ec 01       	movw	r28, r24
 304:	8a ef       	ldi	r24, 0xFA	; 250
 306:	83 bd       	out	0x23, r24	; 35
 308:	10 92 64 01 	sts	0x0164, r1
 30c:	10 92 63 01 	sts	0x0163, r1
 310:	80 e0       	ldi	r24, 0x00	; 0
 312:	d9 df       	rcall	.-78     	; 0x2c6 <timer2_start>
 314:	20 91 63 01 	lds	r18, 0x0163
 318:	30 91 64 01 	lds	r19, 0x0164
 31c:	2c 17       	cp	r18, r28
 31e:	3d 07       	cpc	r19, r29
 320:	c8 f3       	brcs	.-14     	; 0x314 <wait_ms+0x16>
 322:	e6 df       	rcall	.-52     	; 0x2f0 <timer2_stop>
 324:	df 91       	pop	r29
 326:	cf 91       	pop	r28
 328:	08 95       	ret

0000032a <__vector_9>:
 32a:	1f 92       	push	r1
 32c:	0f 92       	push	r0
 32e:	0f b6       	in	r0, 0x3f	; 63
 330:	0f 92       	push	r0
 332:	11 24       	eor	r1, r1
 334:	8f 93       	push	r24
 336:	9f 93       	push	r25
 338:	80 91 63 01 	lds	r24, 0x0163
 33c:	90 91 64 01 	lds	r25, 0x0164
 340:	01 96       	adiw	r24, 0x01	; 1
 342:	90 93 64 01 	sts	0x0164, r25
 346:	80 93 63 01 	sts	0x0163, r24
 34a:	9f 91       	pop	r25
 34c:	8f 91       	pop	r24
 34e:	0f 90       	pop	r0
 350:	0f be       	out	0x3f, r0	; 63
 352:	0f 90       	pop	r0
 354:	1f 90       	pop	r1
 356:	18 95       	reti

00000358 <shaft_encoder_init>:
 358:	84 b3       	in	r24, 0x14	; 20
 35a:	8f 73       	andi	r24, 0x3F	; 63
 35c:	84 bb       	out	0x14, r24	; 20
 35e:	85 b3       	in	r24, 0x15	; 21
 360:	80 6c       	ori	r24, 0xC0	; 192
 362:	85 bb       	out	0x15, r24	; 21
 364:	08 95       	ret

00000366 <read_shaft_encoder>:
 366:	93 b3       	in	r25, 0x13	; 19
 368:	92 95       	swap	r25
 36a:	96 95       	lsr	r25
 36c:	96 95       	lsr	r25
 36e:	93 70       	andi	r25, 0x03	; 3
 370:	80 91 06 01 	lds	r24, 0x0106
 374:	83 30       	cpi	r24, 0x03	; 3
 376:	39 f4       	brne	.+14     	; 0x386 <read_shaft_encoder+0x20>
 378:	92 30       	cpi	r25, 0x02	; 2
 37a:	39 f0       	breq	.+14     	; 0x38a <read_shaft_encoder+0x24>
 37c:	81 e0       	ldi	r24, 0x01	; 1
 37e:	91 30       	cpi	r25, 0x01	; 1
 380:	29 f0       	breq	.+10     	; 0x38c <read_shaft_encoder+0x26>
 382:	80 e0       	ldi	r24, 0x00	; 0
 384:	03 c0       	rjmp	.+6      	; 0x38c <read_shaft_encoder+0x26>
 386:	80 e0       	ldi	r24, 0x00	; 0
 388:	01 c0       	rjmp	.+2      	; 0x38c <read_shaft_encoder+0x26>
 38a:	8f ef       	ldi	r24, 0xFF	; 255
 38c:	90 93 06 01 	sts	0x0106, r25
 390:	08 95       	ret

00000392 <move_stepper_motor_by_step>:
 * Turn the stepper motor a given number of steps. 
 *
 * @param num_steps A value between 1 and 200 steps (1.8 to 360 degrees)
 * @param direction Indication of direction: 1 for CW and -1 for CCW 
 */
void  move_stepper_motor_by_step(int num_steps, int direction) {
 392:	cf 92       	push	r12
 394:	df 92       	push	r13
 396:	ef 92       	push	r14
 398:	ff 92       	push	r15
 39a:	0f 93       	push	r16
 39c:	1f 93       	push	r17
 39e:	cf 93       	push	r28
 3a0:	df 93       	push	r29
 3a2:	7c 01       	movw	r14, r24

	// INSERT CODE HERE
	//int step =(0b00000000);
	int dum = 0b00000000;
	
	if(direction == 1)
 3a4:	61 30       	cpi	r22, 0x01	; 1
 3a6:	71 05       	cpc	r23, r1
 3a8:	71 f4       	brne	.+28     	; 0x3c6 <move_stepper_motor_by_step+0x34>
	{
		int i =0;
		while(i<num_steps)
 3aa:	18 16       	cp	r1, r24
 3ac:	19 06       	cpc	r1, r25
 3ae:	5c f5       	brge	.+86     	; 0x406 <move_stepper_motor_by_step+0x74>
 3b0:	c0 e0       	ldi	r28, 0x00	; 0
 3b2:	d0 e0       	ldi	r29, 0x00	; 0
			
			if(dum == 0b00010000)
			{
				dum = 0b00000001;	
			}
			PORTE = (dum);	
 3b4:	13 b8       	out	0x03, r1	; 3
			dum = dum << 1;
			i++;
 3b6:	21 96       	adiw	r28, 0x01	; 1
			wait_ms(20);
 3b8:	84 e1       	ldi	r24, 0x14	; 20
 3ba:	90 e0       	ldi	r25, 0x00	; 0
 3bc:	a0 df       	rcall	.-192    	; 0x2fe <wait_ms>
	int dum = 0b00000000;
	
	if(direction == 1)
	{
		int i =0;
		while(i<num_steps)
 3be:	ce 15       	cp	r28, r14
 3c0:	df 05       	cpc	r29, r15
 3c2:	c1 f7       	brne	.-16     	; 0x3b4 <move_stepper_motor_by_step+0x22>
 3c4:	20 c0       	rjmp	.+64     	; 0x406 <move_stepper_motor_by_step+0x74>
			i++;
			wait_ms(20);
			
		}
	}
	else if(direction == 255)
 3c6:	6f 3f       	cpi	r22, 0xFF	; 255
 3c8:	71 05       	cpc	r23, r1
 3ca:	e9 f4       	brne	.+58     	; 0x406 <move_stepper_motor_by_step+0x74>
	{
		int i =0;
				while(i<num_steps)
 3cc:	18 16       	cp	r1, r24
 3ce:	19 06       	cpc	r1, r25
 3d0:	8c f0       	brlt	.+34     	; 0x3f4 <move_stepper_motor_by_step+0x62>
 3d2:	19 c0       	rjmp	.+50     	; 0x406 <move_stepper_motor_by_step+0x74>
				{
					
					if(dum == 0b00000000)
 3d4:	20 97       	sbiw	r28, 0x00	; 0
 3d6:	11 f4       	brne	.+4      	; 0x3dc <move_stepper_motor_by_step+0x4a>
					{
						dum = 0b00001000;
 3d8:	cc 2d       	mov	r28, r12
 3da:	dd 2d       	mov	r29, r13
					}
					PORTE = (dum);
 3dc:	c3 b9       	out	0x03, r28	; 3
					dum = dum >> 1;
 3de:	d5 95       	asr	r29
 3e0:	c7 95       	ror	r28
					i++;
 3e2:	0f 5f       	subi	r16, 0xFF	; 255
 3e4:	1f 4f       	sbci	r17, 0xFF	; 255
					wait_ms(20);
 3e6:	84 e1       	ldi	r24, 0x14	; 20
 3e8:	90 e0       	ldi	r25, 0x00	; 0
 3ea:	89 df       	rcall	.-238    	; 0x2fe <wait_ms>
		}
	}
	else if(direction == 255)
	{
		int i =0;
				while(i<num_steps)
 3ec:	0e 15       	cp	r16, r14
 3ee:	1f 05       	cpc	r17, r15
 3f0:	89 f7       	brne	.-30     	; 0x3d4 <move_stepper_motor_by_step+0x42>
 3f2:	09 c0       	rjmp	.+18     	; 0x406 <move_stepper_motor_by_step+0x74>
 3f4:	00 e0       	ldi	r16, 0x00	; 0
 3f6:	10 e0       	ldi	r17, 0x00	; 0
				{
					
					if(dum == 0b00000000)
					{
						dum = 0b00001000;
 3f8:	c8 e0       	ldi	r28, 0x08	; 8
 3fa:	d0 e0       	ldi	r29, 0x00	; 0
 3fc:	68 94       	set
 3fe:	cc 24       	eor	r12, r12
 400:	c3 f8       	bld	r12, 3
 402:	d1 2c       	mov	r13, r1
 404:	eb cf       	rjmp	.-42     	; 0x3dc <move_stepper_motor_by_step+0x4a>

	// Requirements
	// - Use bitwise operators to ensure the right 4 bits of PORTE are not affected
	// - Set the left 4 bits of PORTE to 0's at the end of your function (to allow the stepper motor to spin freely)
	
}
 406:	df 91       	pop	r29
 408:	cf 91       	pop	r28
 40a:	1f 91       	pop	r17
 40c:	0f 91       	pop	r16
 40e:	ff 90       	pop	r15
 410:	ef 90       	pop	r14
 412:	df 90       	pop	r13
 414:	cf 90       	pop	r12
 416:	08 95       	ret

00000418 <__divmodhi4>:
 418:	97 fb       	bst	r25, 7
 41a:	07 2e       	mov	r0, r23
 41c:	16 f4       	brtc	.+4      	; 0x422 <__divmodhi4+0xa>
 41e:	00 94       	com	r0
 420:	06 d0       	rcall	.+12     	; 0x42e <__divmodhi4_neg1>
 422:	77 fd       	sbrc	r23, 7
 424:	08 d0       	rcall	.+16     	; 0x436 <__divmodhi4_neg2>
 426:	0b d0       	rcall	.+22     	; 0x43e <__udivmodhi4>
 428:	07 fc       	sbrc	r0, 7
 42a:	05 d0       	rcall	.+10     	; 0x436 <__divmodhi4_neg2>
 42c:	3e f4       	brtc	.+14     	; 0x43c <__divmodhi4_exit>

0000042e <__divmodhi4_neg1>:
 42e:	90 95       	com	r25
 430:	81 95       	neg	r24
 432:	9f 4f       	sbci	r25, 0xFF	; 255
 434:	08 95       	ret

00000436 <__divmodhi4_neg2>:
 436:	70 95       	com	r23
 438:	61 95       	neg	r22
 43a:	7f 4f       	sbci	r23, 0xFF	; 255

0000043c <__divmodhi4_exit>:
 43c:	08 95       	ret

0000043e <__udivmodhi4>:
 43e:	aa 1b       	sub	r26, r26
 440:	bb 1b       	sub	r27, r27
 442:	51 e1       	ldi	r21, 0x11	; 17
 444:	07 c0       	rjmp	.+14     	; 0x454 <__udivmodhi4_ep>

00000446 <__udivmodhi4_loop>:
 446:	aa 1f       	adc	r26, r26
 448:	bb 1f       	adc	r27, r27
 44a:	a6 17       	cp	r26, r22
 44c:	b7 07       	cpc	r27, r23
 44e:	10 f0       	brcs	.+4      	; 0x454 <__udivmodhi4_ep>
 450:	a6 1b       	sub	r26, r22
 452:	b7 0b       	sbc	r27, r23

00000454 <__udivmodhi4_ep>:
 454:	88 1f       	adc	r24, r24
 456:	99 1f       	adc	r25, r25
 458:	5a 95       	dec	r21
 45a:	a9 f7       	brne	.-22     	; 0x446 <__udivmodhi4_loop>
 45c:	80 95       	com	r24
 45e:	90 95       	com	r25
 460:	bc 01       	movw	r22, r24
 462:	cd 01       	movw	r24, r26
 464:	08 95       	ret

00000466 <strcmp>:
 466:	fb 01       	movw	r30, r22
 468:	dc 01       	movw	r26, r24
 46a:	8d 91       	ld	r24, X+
 46c:	01 90       	ld	r0, Z+
 46e:	80 19       	sub	r24, r0
 470:	01 10       	cpse	r0, r1
 472:	d9 f3       	breq	.-10     	; 0x46a <strcmp+0x4>
 474:	99 0b       	sbc	r25, r25
 476:	08 95       	ret

00000478 <strcpy>:
 478:	fb 01       	movw	r30, r22
 47a:	dc 01       	movw	r26, r24
 47c:	01 90       	ld	r0, Z+
 47e:	0d 92       	st	X+, r0
 480:	00 20       	and	r0, r0
 482:	e1 f7       	brne	.-8      	; 0x47c <strcpy+0x4>
 484:	08 95       	ret

00000486 <vsnprintf>:
 486:	0f 93       	push	r16
 488:	1f 93       	push	r17
 48a:	cf 93       	push	r28
 48c:	df 93       	push	r29
 48e:	cd b7       	in	r28, 0x3d	; 61
 490:	de b7       	in	r29, 0x3e	; 62
 492:	2e 97       	sbiw	r28, 0x0e	; 14
 494:	0f b6       	in	r0, 0x3f	; 63
 496:	f8 94       	cli
 498:	de bf       	out	0x3e, r29	; 62
 49a:	0f be       	out	0x3f, r0	; 63
 49c:	cd bf       	out	0x3d, r28	; 61
 49e:	8c 01       	movw	r16, r24
 4a0:	ca 01       	movw	r24, r20
 4a2:	46 e0       	ldi	r20, 0x06	; 6
 4a4:	4c 83       	std	Y+4, r20	; 0x04
 4a6:	1a 83       	std	Y+2, r17	; 0x02
 4a8:	09 83       	std	Y+1, r16	; 0x01
 4aa:	77 ff       	sbrs	r23, 7
 4ac:	02 c0       	rjmp	.+4      	; 0x4b2 <vsnprintf+0x2c>
 4ae:	60 e0       	ldi	r22, 0x00	; 0
 4b0:	70 e8       	ldi	r23, 0x80	; 128
 4b2:	61 50       	subi	r22, 0x01	; 1
 4b4:	71 09       	sbc	r23, r1
 4b6:	7e 83       	std	Y+6, r23	; 0x06
 4b8:	6d 83       	std	Y+5, r22	; 0x05
 4ba:	a9 01       	movw	r20, r18
 4bc:	bc 01       	movw	r22, r24
 4be:	ce 01       	movw	r24, r28
 4c0:	01 96       	adiw	r24, 0x01	; 1
 4c2:	19 d0       	rcall	.+50     	; 0x4f6 <vfprintf>
 4c4:	4d 81       	ldd	r20, Y+5	; 0x05
 4c6:	5e 81       	ldd	r21, Y+6	; 0x06
 4c8:	57 fd       	sbrc	r21, 7
 4ca:	0a c0       	rjmp	.+20     	; 0x4e0 <vsnprintf+0x5a>
 4cc:	2f 81       	ldd	r18, Y+7	; 0x07
 4ce:	38 85       	ldd	r19, Y+8	; 0x08
 4d0:	42 17       	cp	r20, r18
 4d2:	53 07       	cpc	r21, r19
 4d4:	0c f4       	brge	.+2      	; 0x4d8 <vsnprintf+0x52>
 4d6:	9a 01       	movw	r18, r20
 4d8:	f8 01       	movw	r30, r16
 4da:	e2 0f       	add	r30, r18
 4dc:	f3 1f       	adc	r31, r19
 4de:	10 82       	st	Z, r1
 4e0:	2e 96       	adiw	r28, 0x0e	; 14
 4e2:	0f b6       	in	r0, 0x3f	; 63
 4e4:	f8 94       	cli
 4e6:	de bf       	out	0x3e, r29	; 62
 4e8:	0f be       	out	0x3f, r0	; 63
 4ea:	cd bf       	out	0x3d, r28	; 61
 4ec:	df 91       	pop	r29
 4ee:	cf 91       	pop	r28
 4f0:	1f 91       	pop	r17
 4f2:	0f 91       	pop	r16
 4f4:	08 95       	ret

000004f6 <vfprintf>:
 4f6:	2f 92       	push	r2
 4f8:	3f 92       	push	r3
 4fa:	4f 92       	push	r4
 4fc:	5f 92       	push	r5
 4fe:	6f 92       	push	r6
 500:	7f 92       	push	r7
 502:	8f 92       	push	r8
 504:	9f 92       	push	r9
 506:	af 92       	push	r10
 508:	bf 92       	push	r11
 50a:	cf 92       	push	r12
 50c:	df 92       	push	r13
 50e:	ef 92       	push	r14
 510:	ff 92       	push	r15
 512:	0f 93       	push	r16
 514:	1f 93       	push	r17
 516:	cf 93       	push	r28
 518:	df 93       	push	r29
 51a:	cd b7       	in	r28, 0x3d	; 61
 51c:	de b7       	in	r29, 0x3e	; 62
 51e:	2c 97       	sbiw	r28, 0x0c	; 12
 520:	0f b6       	in	r0, 0x3f	; 63
 522:	f8 94       	cli
 524:	de bf       	out	0x3e, r29	; 62
 526:	0f be       	out	0x3f, r0	; 63
 528:	cd bf       	out	0x3d, r28	; 61
 52a:	7c 01       	movw	r14, r24
 52c:	6b 01       	movw	r12, r22
 52e:	8a 01       	movw	r16, r20
 530:	fc 01       	movw	r30, r24
 532:	17 82       	std	Z+7, r1	; 0x07
 534:	16 82       	std	Z+6, r1	; 0x06
 536:	83 81       	ldd	r24, Z+3	; 0x03
 538:	81 ff       	sbrs	r24, 1
 53a:	b0 c1       	rjmp	.+864    	; 0x89c <vfprintf+0x3a6>
 53c:	ce 01       	movw	r24, r28
 53e:	01 96       	adiw	r24, 0x01	; 1
 540:	4c 01       	movw	r8, r24
 542:	f7 01       	movw	r30, r14
 544:	93 81       	ldd	r25, Z+3	; 0x03
 546:	f6 01       	movw	r30, r12
 548:	93 fd       	sbrc	r25, 3
 54a:	85 91       	lpm	r24, Z+
 54c:	93 ff       	sbrs	r25, 3
 54e:	81 91       	ld	r24, Z+
 550:	6f 01       	movw	r12, r30
 552:	88 23       	and	r24, r24
 554:	09 f4       	brne	.+2      	; 0x558 <vfprintf+0x62>
 556:	9e c1       	rjmp	.+828    	; 0x894 <vfprintf+0x39e>
 558:	85 32       	cpi	r24, 0x25	; 37
 55a:	39 f4       	brne	.+14     	; 0x56a <vfprintf+0x74>
 55c:	93 fd       	sbrc	r25, 3
 55e:	85 91       	lpm	r24, Z+
 560:	93 ff       	sbrs	r25, 3
 562:	81 91       	ld	r24, Z+
 564:	6f 01       	movw	r12, r30
 566:	85 32       	cpi	r24, 0x25	; 37
 568:	21 f4       	brne	.+8      	; 0x572 <vfprintf+0x7c>
 56a:	b7 01       	movw	r22, r14
 56c:	90 e0       	ldi	r25, 0x00	; 0
 56e:	c7 d1       	rcall	.+910    	; 0x8fe <fputc>
 570:	e8 cf       	rjmp	.-48     	; 0x542 <vfprintf+0x4c>
 572:	51 2c       	mov	r5, r1
 574:	31 2c       	mov	r3, r1
 576:	20 e0       	ldi	r18, 0x00	; 0
 578:	20 32       	cpi	r18, 0x20	; 32
 57a:	a0 f4       	brcc	.+40     	; 0x5a4 <vfprintf+0xae>
 57c:	8b 32       	cpi	r24, 0x2B	; 43
 57e:	69 f0       	breq	.+26     	; 0x59a <vfprintf+0xa4>
 580:	30 f4       	brcc	.+12     	; 0x58e <vfprintf+0x98>
 582:	80 32       	cpi	r24, 0x20	; 32
 584:	59 f0       	breq	.+22     	; 0x59c <vfprintf+0xa6>
 586:	83 32       	cpi	r24, 0x23	; 35
 588:	69 f4       	brne	.+26     	; 0x5a4 <vfprintf+0xae>
 58a:	20 61       	ori	r18, 0x10	; 16
 58c:	2c c0       	rjmp	.+88     	; 0x5e6 <vfprintf+0xf0>
 58e:	8d 32       	cpi	r24, 0x2D	; 45
 590:	39 f0       	breq	.+14     	; 0x5a0 <vfprintf+0xaa>
 592:	80 33       	cpi	r24, 0x30	; 48
 594:	39 f4       	brne	.+14     	; 0x5a4 <vfprintf+0xae>
 596:	21 60       	ori	r18, 0x01	; 1
 598:	26 c0       	rjmp	.+76     	; 0x5e6 <vfprintf+0xf0>
 59a:	22 60       	ori	r18, 0x02	; 2
 59c:	24 60       	ori	r18, 0x04	; 4
 59e:	23 c0       	rjmp	.+70     	; 0x5e6 <vfprintf+0xf0>
 5a0:	28 60       	ori	r18, 0x08	; 8
 5a2:	21 c0       	rjmp	.+66     	; 0x5e6 <vfprintf+0xf0>
 5a4:	27 fd       	sbrc	r18, 7
 5a6:	27 c0       	rjmp	.+78     	; 0x5f6 <vfprintf+0x100>
 5a8:	30 ed       	ldi	r19, 0xD0	; 208
 5aa:	38 0f       	add	r19, r24
 5ac:	3a 30       	cpi	r19, 0x0A	; 10
 5ae:	78 f4       	brcc	.+30     	; 0x5ce <vfprintf+0xd8>
 5b0:	26 ff       	sbrs	r18, 6
 5b2:	06 c0       	rjmp	.+12     	; 0x5c0 <vfprintf+0xca>
 5b4:	fa e0       	ldi	r31, 0x0A	; 10
 5b6:	5f 9e       	mul	r5, r31
 5b8:	30 0d       	add	r19, r0
 5ba:	11 24       	eor	r1, r1
 5bc:	53 2e       	mov	r5, r19
 5be:	13 c0       	rjmp	.+38     	; 0x5e6 <vfprintf+0xf0>
 5c0:	8a e0       	ldi	r24, 0x0A	; 10
 5c2:	38 9e       	mul	r3, r24
 5c4:	30 0d       	add	r19, r0
 5c6:	11 24       	eor	r1, r1
 5c8:	33 2e       	mov	r3, r19
 5ca:	20 62       	ori	r18, 0x20	; 32
 5cc:	0c c0       	rjmp	.+24     	; 0x5e6 <vfprintf+0xf0>
 5ce:	8e 32       	cpi	r24, 0x2E	; 46
 5d0:	21 f4       	brne	.+8      	; 0x5da <vfprintf+0xe4>
 5d2:	26 fd       	sbrc	r18, 6
 5d4:	5f c1       	rjmp	.+702    	; 0x894 <vfprintf+0x39e>
 5d6:	20 64       	ori	r18, 0x40	; 64
 5d8:	06 c0       	rjmp	.+12     	; 0x5e6 <vfprintf+0xf0>
 5da:	8c 36       	cpi	r24, 0x6C	; 108
 5dc:	11 f4       	brne	.+4      	; 0x5e2 <vfprintf+0xec>
 5de:	20 68       	ori	r18, 0x80	; 128
 5e0:	02 c0       	rjmp	.+4      	; 0x5e6 <vfprintf+0xf0>
 5e2:	88 36       	cpi	r24, 0x68	; 104
 5e4:	41 f4       	brne	.+16     	; 0x5f6 <vfprintf+0x100>
 5e6:	f6 01       	movw	r30, r12
 5e8:	93 fd       	sbrc	r25, 3
 5ea:	85 91       	lpm	r24, Z+
 5ec:	93 ff       	sbrs	r25, 3
 5ee:	81 91       	ld	r24, Z+
 5f0:	6f 01       	movw	r12, r30
 5f2:	81 11       	cpse	r24, r1
 5f4:	c1 cf       	rjmp	.-126    	; 0x578 <vfprintf+0x82>
 5f6:	98 2f       	mov	r25, r24
 5f8:	9f 7d       	andi	r25, 0xDF	; 223
 5fa:	95 54       	subi	r25, 0x45	; 69
 5fc:	93 30       	cpi	r25, 0x03	; 3
 5fe:	28 f4       	brcc	.+10     	; 0x60a <vfprintf+0x114>
 600:	0c 5f       	subi	r16, 0xFC	; 252
 602:	1f 4f       	sbci	r17, 0xFF	; 255
 604:	ff e3       	ldi	r31, 0x3F	; 63
 606:	f9 83       	std	Y+1, r31	; 0x01
 608:	0d c0       	rjmp	.+26     	; 0x624 <vfprintf+0x12e>
 60a:	83 36       	cpi	r24, 0x63	; 99
 60c:	31 f0       	breq	.+12     	; 0x61a <vfprintf+0x124>
 60e:	83 37       	cpi	r24, 0x73	; 115
 610:	71 f0       	breq	.+28     	; 0x62e <vfprintf+0x138>
 612:	83 35       	cpi	r24, 0x53	; 83
 614:	09 f0       	breq	.+2      	; 0x618 <vfprintf+0x122>
 616:	57 c0       	rjmp	.+174    	; 0x6c6 <vfprintf+0x1d0>
 618:	21 c0       	rjmp	.+66     	; 0x65c <vfprintf+0x166>
 61a:	f8 01       	movw	r30, r16
 61c:	80 81       	ld	r24, Z
 61e:	89 83       	std	Y+1, r24	; 0x01
 620:	0e 5f       	subi	r16, 0xFE	; 254
 622:	1f 4f       	sbci	r17, 0xFF	; 255
 624:	44 24       	eor	r4, r4
 626:	43 94       	inc	r4
 628:	51 2c       	mov	r5, r1
 62a:	54 01       	movw	r10, r8
 62c:	14 c0       	rjmp	.+40     	; 0x656 <vfprintf+0x160>
 62e:	38 01       	movw	r6, r16
 630:	f2 e0       	ldi	r31, 0x02	; 2
 632:	6f 0e       	add	r6, r31
 634:	71 1c       	adc	r7, r1
 636:	f8 01       	movw	r30, r16
 638:	a0 80       	ld	r10, Z
 63a:	b1 80       	ldd	r11, Z+1	; 0x01
 63c:	26 ff       	sbrs	r18, 6
 63e:	03 c0       	rjmp	.+6      	; 0x646 <vfprintf+0x150>
 640:	65 2d       	mov	r22, r5
 642:	70 e0       	ldi	r23, 0x00	; 0
 644:	02 c0       	rjmp	.+4      	; 0x64a <vfprintf+0x154>
 646:	6f ef       	ldi	r22, 0xFF	; 255
 648:	7f ef       	ldi	r23, 0xFF	; 255
 64a:	c5 01       	movw	r24, r10
 64c:	2c 87       	std	Y+12, r18	; 0x0c
 64e:	4c d1       	rcall	.+664    	; 0x8e8 <strnlen>
 650:	2c 01       	movw	r4, r24
 652:	83 01       	movw	r16, r6
 654:	2c 85       	ldd	r18, Y+12	; 0x0c
 656:	2f 77       	andi	r18, 0x7F	; 127
 658:	22 2e       	mov	r2, r18
 65a:	16 c0       	rjmp	.+44     	; 0x688 <vfprintf+0x192>
 65c:	38 01       	movw	r6, r16
 65e:	f2 e0       	ldi	r31, 0x02	; 2
 660:	6f 0e       	add	r6, r31
 662:	71 1c       	adc	r7, r1
 664:	f8 01       	movw	r30, r16
 666:	a0 80       	ld	r10, Z
 668:	b1 80       	ldd	r11, Z+1	; 0x01
 66a:	26 ff       	sbrs	r18, 6
 66c:	03 c0       	rjmp	.+6      	; 0x674 <vfprintf+0x17e>
 66e:	65 2d       	mov	r22, r5
 670:	70 e0       	ldi	r23, 0x00	; 0
 672:	02 c0       	rjmp	.+4      	; 0x678 <vfprintf+0x182>
 674:	6f ef       	ldi	r22, 0xFF	; 255
 676:	7f ef       	ldi	r23, 0xFF	; 255
 678:	c5 01       	movw	r24, r10
 67a:	2c 87       	std	Y+12, r18	; 0x0c
 67c:	2a d1       	rcall	.+596    	; 0x8d2 <strnlen_P>
 67e:	2c 01       	movw	r4, r24
 680:	2c 85       	ldd	r18, Y+12	; 0x0c
 682:	20 68       	ori	r18, 0x80	; 128
 684:	22 2e       	mov	r2, r18
 686:	83 01       	movw	r16, r6
 688:	23 fc       	sbrc	r2, 3
 68a:	19 c0       	rjmp	.+50     	; 0x6be <vfprintf+0x1c8>
 68c:	83 2d       	mov	r24, r3
 68e:	90 e0       	ldi	r25, 0x00	; 0
 690:	48 16       	cp	r4, r24
 692:	59 06       	cpc	r5, r25
 694:	a0 f4       	brcc	.+40     	; 0x6be <vfprintf+0x1c8>
 696:	b7 01       	movw	r22, r14
 698:	80 e2       	ldi	r24, 0x20	; 32
 69a:	90 e0       	ldi	r25, 0x00	; 0
 69c:	30 d1       	rcall	.+608    	; 0x8fe <fputc>
 69e:	3a 94       	dec	r3
 6a0:	f5 cf       	rjmp	.-22     	; 0x68c <vfprintf+0x196>
 6a2:	f5 01       	movw	r30, r10
 6a4:	27 fc       	sbrc	r2, 7
 6a6:	85 91       	lpm	r24, Z+
 6a8:	27 fe       	sbrs	r2, 7
 6aa:	81 91       	ld	r24, Z+
 6ac:	5f 01       	movw	r10, r30
 6ae:	b7 01       	movw	r22, r14
 6b0:	90 e0       	ldi	r25, 0x00	; 0
 6b2:	25 d1       	rcall	.+586    	; 0x8fe <fputc>
 6b4:	31 10       	cpse	r3, r1
 6b6:	3a 94       	dec	r3
 6b8:	f1 e0       	ldi	r31, 0x01	; 1
 6ba:	4f 1a       	sub	r4, r31
 6bc:	51 08       	sbc	r5, r1
 6be:	41 14       	cp	r4, r1
 6c0:	51 04       	cpc	r5, r1
 6c2:	79 f7       	brne	.-34     	; 0x6a2 <vfprintf+0x1ac>
 6c4:	de c0       	rjmp	.+444    	; 0x882 <vfprintf+0x38c>
 6c6:	84 36       	cpi	r24, 0x64	; 100
 6c8:	11 f0       	breq	.+4      	; 0x6ce <vfprintf+0x1d8>
 6ca:	89 36       	cpi	r24, 0x69	; 105
 6cc:	31 f5       	brne	.+76     	; 0x71a <vfprintf+0x224>
 6ce:	f8 01       	movw	r30, r16
 6d0:	27 ff       	sbrs	r18, 7
 6d2:	07 c0       	rjmp	.+14     	; 0x6e2 <vfprintf+0x1ec>
 6d4:	60 81       	ld	r22, Z
 6d6:	71 81       	ldd	r23, Z+1	; 0x01
 6d8:	82 81       	ldd	r24, Z+2	; 0x02
 6da:	93 81       	ldd	r25, Z+3	; 0x03
 6dc:	0c 5f       	subi	r16, 0xFC	; 252
 6de:	1f 4f       	sbci	r17, 0xFF	; 255
 6e0:	08 c0       	rjmp	.+16     	; 0x6f2 <vfprintf+0x1fc>
 6e2:	60 81       	ld	r22, Z
 6e4:	71 81       	ldd	r23, Z+1	; 0x01
 6e6:	88 27       	eor	r24, r24
 6e8:	77 fd       	sbrc	r23, 7
 6ea:	80 95       	com	r24
 6ec:	98 2f       	mov	r25, r24
 6ee:	0e 5f       	subi	r16, 0xFE	; 254
 6f0:	1f 4f       	sbci	r17, 0xFF	; 255
 6f2:	2f 76       	andi	r18, 0x6F	; 111
 6f4:	b2 2e       	mov	r11, r18
 6f6:	97 ff       	sbrs	r25, 7
 6f8:	09 c0       	rjmp	.+18     	; 0x70c <vfprintf+0x216>
 6fa:	90 95       	com	r25
 6fc:	80 95       	com	r24
 6fe:	70 95       	com	r23
 700:	61 95       	neg	r22
 702:	7f 4f       	sbci	r23, 0xFF	; 255
 704:	8f 4f       	sbci	r24, 0xFF	; 255
 706:	9f 4f       	sbci	r25, 0xFF	; 255
 708:	20 68       	ori	r18, 0x80	; 128
 70a:	b2 2e       	mov	r11, r18
 70c:	2a e0       	ldi	r18, 0x0A	; 10
 70e:	30 e0       	ldi	r19, 0x00	; 0
 710:	a4 01       	movw	r20, r8
 712:	27 d1       	rcall	.+590    	; 0x962 <__ultoa_invert>
 714:	a8 2e       	mov	r10, r24
 716:	a8 18       	sub	r10, r8
 718:	43 c0       	rjmp	.+134    	; 0x7a0 <vfprintf+0x2aa>
 71a:	85 37       	cpi	r24, 0x75	; 117
 71c:	29 f4       	brne	.+10     	; 0x728 <vfprintf+0x232>
 71e:	2f 7e       	andi	r18, 0xEF	; 239
 720:	b2 2e       	mov	r11, r18
 722:	2a e0       	ldi	r18, 0x0A	; 10
 724:	30 e0       	ldi	r19, 0x00	; 0
 726:	25 c0       	rjmp	.+74     	; 0x772 <vfprintf+0x27c>
 728:	f2 2f       	mov	r31, r18
 72a:	f9 7f       	andi	r31, 0xF9	; 249
 72c:	bf 2e       	mov	r11, r31
 72e:	8f 36       	cpi	r24, 0x6F	; 111
 730:	c1 f0       	breq	.+48     	; 0x762 <vfprintf+0x26c>
 732:	18 f4       	brcc	.+6      	; 0x73a <vfprintf+0x244>
 734:	88 35       	cpi	r24, 0x58	; 88
 736:	79 f0       	breq	.+30     	; 0x756 <vfprintf+0x260>
 738:	ad c0       	rjmp	.+346    	; 0x894 <vfprintf+0x39e>
 73a:	80 37       	cpi	r24, 0x70	; 112
 73c:	19 f0       	breq	.+6      	; 0x744 <vfprintf+0x24e>
 73e:	88 37       	cpi	r24, 0x78	; 120
 740:	21 f0       	breq	.+8      	; 0x74a <vfprintf+0x254>
 742:	a8 c0       	rjmp	.+336    	; 0x894 <vfprintf+0x39e>
 744:	2f 2f       	mov	r18, r31
 746:	20 61       	ori	r18, 0x10	; 16
 748:	b2 2e       	mov	r11, r18
 74a:	b4 fe       	sbrs	r11, 4
 74c:	0d c0       	rjmp	.+26     	; 0x768 <vfprintf+0x272>
 74e:	8b 2d       	mov	r24, r11
 750:	84 60       	ori	r24, 0x04	; 4
 752:	b8 2e       	mov	r11, r24
 754:	09 c0       	rjmp	.+18     	; 0x768 <vfprintf+0x272>
 756:	24 ff       	sbrs	r18, 4
 758:	0a c0       	rjmp	.+20     	; 0x76e <vfprintf+0x278>
 75a:	9f 2f       	mov	r25, r31
 75c:	96 60       	ori	r25, 0x06	; 6
 75e:	b9 2e       	mov	r11, r25
 760:	06 c0       	rjmp	.+12     	; 0x76e <vfprintf+0x278>
 762:	28 e0       	ldi	r18, 0x08	; 8
 764:	30 e0       	ldi	r19, 0x00	; 0
 766:	05 c0       	rjmp	.+10     	; 0x772 <vfprintf+0x27c>
 768:	20 e1       	ldi	r18, 0x10	; 16
 76a:	30 e0       	ldi	r19, 0x00	; 0
 76c:	02 c0       	rjmp	.+4      	; 0x772 <vfprintf+0x27c>
 76e:	20 e1       	ldi	r18, 0x10	; 16
 770:	32 e0       	ldi	r19, 0x02	; 2
 772:	f8 01       	movw	r30, r16
 774:	b7 fe       	sbrs	r11, 7
 776:	07 c0       	rjmp	.+14     	; 0x786 <vfprintf+0x290>
 778:	60 81       	ld	r22, Z
 77a:	71 81       	ldd	r23, Z+1	; 0x01
 77c:	82 81       	ldd	r24, Z+2	; 0x02
 77e:	93 81       	ldd	r25, Z+3	; 0x03
 780:	0c 5f       	subi	r16, 0xFC	; 252
 782:	1f 4f       	sbci	r17, 0xFF	; 255
 784:	06 c0       	rjmp	.+12     	; 0x792 <vfprintf+0x29c>
 786:	60 81       	ld	r22, Z
 788:	71 81       	ldd	r23, Z+1	; 0x01
 78a:	80 e0       	ldi	r24, 0x00	; 0
 78c:	90 e0       	ldi	r25, 0x00	; 0
 78e:	0e 5f       	subi	r16, 0xFE	; 254
 790:	1f 4f       	sbci	r17, 0xFF	; 255
 792:	a4 01       	movw	r20, r8
 794:	e6 d0       	rcall	.+460    	; 0x962 <__ultoa_invert>
 796:	a8 2e       	mov	r10, r24
 798:	a8 18       	sub	r10, r8
 79a:	fb 2d       	mov	r31, r11
 79c:	ff 77       	andi	r31, 0x7F	; 127
 79e:	bf 2e       	mov	r11, r31
 7a0:	b6 fe       	sbrs	r11, 6
 7a2:	0b c0       	rjmp	.+22     	; 0x7ba <vfprintf+0x2c4>
 7a4:	2b 2d       	mov	r18, r11
 7a6:	2e 7f       	andi	r18, 0xFE	; 254
 7a8:	a5 14       	cp	r10, r5
 7aa:	50 f4       	brcc	.+20     	; 0x7c0 <vfprintf+0x2ca>
 7ac:	b4 fe       	sbrs	r11, 4
 7ae:	0a c0       	rjmp	.+20     	; 0x7c4 <vfprintf+0x2ce>
 7b0:	b2 fc       	sbrc	r11, 2
 7b2:	08 c0       	rjmp	.+16     	; 0x7c4 <vfprintf+0x2ce>
 7b4:	2b 2d       	mov	r18, r11
 7b6:	2e 7e       	andi	r18, 0xEE	; 238
 7b8:	05 c0       	rjmp	.+10     	; 0x7c4 <vfprintf+0x2ce>
 7ba:	7a 2c       	mov	r7, r10
 7bc:	2b 2d       	mov	r18, r11
 7be:	03 c0       	rjmp	.+6      	; 0x7c6 <vfprintf+0x2d0>
 7c0:	7a 2c       	mov	r7, r10
 7c2:	01 c0       	rjmp	.+2      	; 0x7c6 <vfprintf+0x2d0>
 7c4:	75 2c       	mov	r7, r5
 7c6:	24 ff       	sbrs	r18, 4
 7c8:	0d c0       	rjmp	.+26     	; 0x7e4 <vfprintf+0x2ee>
 7ca:	fe 01       	movw	r30, r28
 7cc:	ea 0d       	add	r30, r10
 7ce:	f1 1d       	adc	r31, r1
 7d0:	80 81       	ld	r24, Z
 7d2:	80 33       	cpi	r24, 0x30	; 48
 7d4:	11 f4       	brne	.+4      	; 0x7da <vfprintf+0x2e4>
 7d6:	29 7e       	andi	r18, 0xE9	; 233
 7d8:	09 c0       	rjmp	.+18     	; 0x7ec <vfprintf+0x2f6>
 7da:	22 ff       	sbrs	r18, 2
 7dc:	06 c0       	rjmp	.+12     	; 0x7ea <vfprintf+0x2f4>
 7de:	73 94       	inc	r7
 7e0:	73 94       	inc	r7
 7e2:	04 c0       	rjmp	.+8      	; 0x7ec <vfprintf+0x2f6>
 7e4:	82 2f       	mov	r24, r18
 7e6:	86 78       	andi	r24, 0x86	; 134
 7e8:	09 f0       	breq	.+2      	; 0x7ec <vfprintf+0x2f6>
 7ea:	73 94       	inc	r7
 7ec:	23 fd       	sbrc	r18, 3
 7ee:	12 c0       	rjmp	.+36     	; 0x814 <vfprintf+0x31e>
 7f0:	20 ff       	sbrs	r18, 0
 7f2:	06 c0       	rjmp	.+12     	; 0x800 <vfprintf+0x30a>
 7f4:	5a 2c       	mov	r5, r10
 7f6:	73 14       	cp	r7, r3
 7f8:	18 f4       	brcc	.+6      	; 0x800 <vfprintf+0x30a>
 7fa:	53 0c       	add	r5, r3
 7fc:	57 18       	sub	r5, r7
 7fe:	73 2c       	mov	r7, r3
 800:	73 14       	cp	r7, r3
 802:	60 f4       	brcc	.+24     	; 0x81c <vfprintf+0x326>
 804:	b7 01       	movw	r22, r14
 806:	80 e2       	ldi	r24, 0x20	; 32
 808:	90 e0       	ldi	r25, 0x00	; 0
 80a:	2c 87       	std	Y+12, r18	; 0x0c
 80c:	78 d0       	rcall	.+240    	; 0x8fe <fputc>
 80e:	73 94       	inc	r7
 810:	2c 85       	ldd	r18, Y+12	; 0x0c
 812:	f6 cf       	rjmp	.-20     	; 0x800 <vfprintf+0x30a>
 814:	73 14       	cp	r7, r3
 816:	10 f4       	brcc	.+4      	; 0x81c <vfprintf+0x326>
 818:	37 18       	sub	r3, r7
 81a:	01 c0       	rjmp	.+2      	; 0x81e <vfprintf+0x328>
 81c:	31 2c       	mov	r3, r1
 81e:	24 ff       	sbrs	r18, 4
 820:	11 c0       	rjmp	.+34     	; 0x844 <vfprintf+0x34e>
 822:	b7 01       	movw	r22, r14
 824:	80 e3       	ldi	r24, 0x30	; 48
 826:	90 e0       	ldi	r25, 0x00	; 0
 828:	2c 87       	std	Y+12, r18	; 0x0c
 82a:	69 d0       	rcall	.+210    	; 0x8fe <fputc>
 82c:	2c 85       	ldd	r18, Y+12	; 0x0c
 82e:	22 ff       	sbrs	r18, 2
 830:	16 c0       	rjmp	.+44     	; 0x85e <vfprintf+0x368>
 832:	21 ff       	sbrs	r18, 1
 834:	03 c0       	rjmp	.+6      	; 0x83c <vfprintf+0x346>
 836:	88 e5       	ldi	r24, 0x58	; 88
 838:	90 e0       	ldi	r25, 0x00	; 0
 83a:	02 c0       	rjmp	.+4      	; 0x840 <vfprintf+0x34a>
 83c:	88 e7       	ldi	r24, 0x78	; 120
 83e:	90 e0       	ldi	r25, 0x00	; 0
 840:	b7 01       	movw	r22, r14
 842:	0c c0       	rjmp	.+24     	; 0x85c <vfprintf+0x366>
 844:	82 2f       	mov	r24, r18
 846:	86 78       	andi	r24, 0x86	; 134
 848:	51 f0       	breq	.+20     	; 0x85e <vfprintf+0x368>
 84a:	21 fd       	sbrc	r18, 1
 84c:	02 c0       	rjmp	.+4      	; 0x852 <vfprintf+0x35c>
 84e:	80 e2       	ldi	r24, 0x20	; 32
 850:	01 c0       	rjmp	.+2      	; 0x854 <vfprintf+0x35e>
 852:	8b e2       	ldi	r24, 0x2B	; 43
 854:	27 fd       	sbrc	r18, 7
 856:	8d e2       	ldi	r24, 0x2D	; 45
 858:	b7 01       	movw	r22, r14
 85a:	90 e0       	ldi	r25, 0x00	; 0
 85c:	50 d0       	rcall	.+160    	; 0x8fe <fputc>
 85e:	a5 14       	cp	r10, r5
 860:	30 f4       	brcc	.+12     	; 0x86e <vfprintf+0x378>
 862:	b7 01       	movw	r22, r14
 864:	80 e3       	ldi	r24, 0x30	; 48
 866:	90 e0       	ldi	r25, 0x00	; 0
 868:	4a d0       	rcall	.+148    	; 0x8fe <fputc>
 86a:	5a 94       	dec	r5
 86c:	f8 cf       	rjmp	.-16     	; 0x85e <vfprintf+0x368>
 86e:	aa 94       	dec	r10
 870:	f4 01       	movw	r30, r8
 872:	ea 0d       	add	r30, r10
 874:	f1 1d       	adc	r31, r1
 876:	80 81       	ld	r24, Z
 878:	b7 01       	movw	r22, r14
 87a:	90 e0       	ldi	r25, 0x00	; 0
 87c:	40 d0       	rcall	.+128    	; 0x8fe <fputc>
 87e:	a1 10       	cpse	r10, r1
 880:	f6 cf       	rjmp	.-20     	; 0x86e <vfprintf+0x378>
 882:	33 20       	and	r3, r3
 884:	09 f4       	brne	.+2      	; 0x888 <vfprintf+0x392>
 886:	5d ce       	rjmp	.-838    	; 0x542 <vfprintf+0x4c>
 888:	b7 01       	movw	r22, r14
 88a:	80 e2       	ldi	r24, 0x20	; 32
 88c:	90 e0       	ldi	r25, 0x00	; 0
 88e:	37 d0       	rcall	.+110    	; 0x8fe <fputc>
 890:	3a 94       	dec	r3
 892:	f7 cf       	rjmp	.-18     	; 0x882 <vfprintf+0x38c>
 894:	f7 01       	movw	r30, r14
 896:	86 81       	ldd	r24, Z+6	; 0x06
 898:	97 81       	ldd	r25, Z+7	; 0x07
 89a:	02 c0       	rjmp	.+4      	; 0x8a0 <vfprintf+0x3aa>
 89c:	8f ef       	ldi	r24, 0xFF	; 255
 89e:	9f ef       	ldi	r25, 0xFF	; 255
 8a0:	2c 96       	adiw	r28, 0x0c	; 12
 8a2:	0f b6       	in	r0, 0x3f	; 63
 8a4:	f8 94       	cli
 8a6:	de bf       	out	0x3e, r29	; 62
 8a8:	0f be       	out	0x3f, r0	; 63
 8aa:	cd bf       	out	0x3d, r28	; 61
 8ac:	df 91       	pop	r29
 8ae:	cf 91       	pop	r28
 8b0:	1f 91       	pop	r17
 8b2:	0f 91       	pop	r16
 8b4:	ff 90       	pop	r15
 8b6:	ef 90       	pop	r14
 8b8:	df 90       	pop	r13
 8ba:	cf 90       	pop	r12
 8bc:	bf 90       	pop	r11
 8be:	af 90       	pop	r10
 8c0:	9f 90       	pop	r9
 8c2:	8f 90       	pop	r8
 8c4:	7f 90       	pop	r7
 8c6:	6f 90       	pop	r6
 8c8:	5f 90       	pop	r5
 8ca:	4f 90       	pop	r4
 8cc:	3f 90       	pop	r3
 8ce:	2f 90       	pop	r2
 8d0:	08 95       	ret

000008d2 <strnlen_P>:
 8d2:	fc 01       	movw	r30, r24
 8d4:	05 90       	lpm	r0, Z+
 8d6:	61 50       	subi	r22, 0x01	; 1
 8d8:	70 40       	sbci	r23, 0x00	; 0
 8da:	01 10       	cpse	r0, r1
 8dc:	d8 f7       	brcc	.-10     	; 0x8d4 <strnlen_P+0x2>
 8de:	80 95       	com	r24
 8e0:	90 95       	com	r25
 8e2:	8e 0f       	add	r24, r30
 8e4:	9f 1f       	adc	r25, r31
 8e6:	08 95       	ret

000008e8 <strnlen>:
 8e8:	fc 01       	movw	r30, r24
 8ea:	61 50       	subi	r22, 0x01	; 1
 8ec:	70 40       	sbci	r23, 0x00	; 0
 8ee:	01 90       	ld	r0, Z+
 8f0:	01 10       	cpse	r0, r1
 8f2:	d8 f7       	brcc	.-10     	; 0x8ea <strnlen+0x2>
 8f4:	80 95       	com	r24
 8f6:	90 95       	com	r25
 8f8:	8e 0f       	add	r24, r30
 8fa:	9f 1f       	adc	r25, r31
 8fc:	08 95       	ret

000008fe <fputc>:
 8fe:	0f 93       	push	r16
 900:	1f 93       	push	r17
 902:	cf 93       	push	r28
 904:	df 93       	push	r29
 906:	18 2f       	mov	r17, r24
 908:	09 2f       	mov	r16, r25
 90a:	eb 01       	movw	r28, r22
 90c:	8b 81       	ldd	r24, Y+3	; 0x03
 90e:	81 fd       	sbrc	r24, 1
 910:	03 c0       	rjmp	.+6      	; 0x918 <fputc+0x1a>
 912:	8f ef       	ldi	r24, 0xFF	; 255
 914:	9f ef       	ldi	r25, 0xFF	; 255
 916:	20 c0       	rjmp	.+64     	; 0x958 <fputc+0x5a>
 918:	82 ff       	sbrs	r24, 2
 91a:	10 c0       	rjmp	.+32     	; 0x93c <fputc+0x3e>
 91c:	4e 81       	ldd	r20, Y+6	; 0x06
 91e:	5f 81       	ldd	r21, Y+7	; 0x07
 920:	2c 81       	ldd	r18, Y+4	; 0x04
 922:	3d 81       	ldd	r19, Y+5	; 0x05
 924:	42 17       	cp	r20, r18
 926:	53 07       	cpc	r21, r19
 928:	7c f4       	brge	.+30     	; 0x948 <fputc+0x4a>
 92a:	e8 81       	ld	r30, Y
 92c:	f9 81       	ldd	r31, Y+1	; 0x01
 92e:	9f 01       	movw	r18, r30
 930:	2f 5f       	subi	r18, 0xFF	; 255
 932:	3f 4f       	sbci	r19, 0xFF	; 255
 934:	39 83       	std	Y+1, r19	; 0x01
 936:	28 83       	st	Y, r18
 938:	10 83       	st	Z, r17
 93a:	06 c0       	rjmp	.+12     	; 0x948 <fputc+0x4a>
 93c:	e8 85       	ldd	r30, Y+8	; 0x08
 93e:	f9 85       	ldd	r31, Y+9	; 0x09
 940:	81 2f       	mov	r24, r17
 942:	09 95       	icall
 944:	89 2b       	or	r24, r25
 946:	29 f7       	brne	.-54     	; 0x912 <fputc+0x14>
 948:	2e 81       	ldd	r18, Y+6	; 0x06
 94a:	3f 81       	ldd	r19, Y+7	; 0x07
 94c:	2f 5f       	subi	r18, 0xFF	; 255
 94e:	3f 4f       	sbci	r19, 0xFF	; 255
 950:	3f 83       	std	Y+7, r19	; 0x07
 952:	2e 83       	std	Y+6, r18	; 0x06
 954:	81 2f       	mov	r24, r17
 956:	90 2f       	mov	r25, r16
 958:	df 91       	pop	r29
 95a:	cf 91       	pop	r28
 95c:	1f 91       	pop	r17
 95e:	0f 91       	pop	r16
 960:	08 95       	ret

00000962 <__ultoa_invert>:
 962:	fa 01       	movw	r30, r20
 964:	aa 27       	eor	r26, r26
 966:	28 30       	cpi	r18, 0x08	; 8
 968:	51 f1       	breq	.+84     	; 0x9be <__ultoa_invert+0x5c>
 96a:	20 31       	cpi	r18, 0x10	; 16
 96c:	81 f1       	breq	.+96     	; 0x9ce <__ultoa_invert+0x6c>
 96e:	e8 94       	clt
 970:	6f 93       	push	r22
 972:	6e 7f       	andi	r22, 0xFE	; 254
 974:	6e 5f       	subi	r22, 0xFE	; 254
 976:	7f 4f       	sbci	r23, 0xFF	; 255
 978:	8f 4f       	sbci	r24, 0xFF	; 255
 97a:	9f 4f       	sbci	r25, 0xFF	; 255
 97c:	af 4f       	sbci	r26, 0xFF	; 255
 97e:	b1 e0       	ldi	r27, 0x01	; 1
 980:	3e d0       	rcall	.+124    	; 0x9fe <__ultoa_invert+0x9c>
 982:	b4 e0       	ldi	r27, 0x04	; 4
 984:	3c d0       	rcall	.+120    	; 0x9fe <__ultoa_invert+0x9c>
 986:	67 0f       	add	r22, r23
 988:	78 1f       	adc	r23, r24
 98a:	89 1f       	adc	r24, r25
 98c:	9a 1f       	adc	r25, r26
 98e:	a1 1d       	adc	r26, r1
 990:	68 0f       	add	r22, r24
 992:	79 1f       	adc	r23, r25
 994:	8a 1f       	adc	r24, r26
 996:	91 1d       	adc	r25, r1
 998:	a1 1d       	adc	r26, r1
 99a:	6a 0f       	add	r22, r26
 99c:	71 1d       	adc	r23, r1
 99e:	81 1d       	adc	r24, r1
 9a0:	91 1d       	adc	r25, r1
 9a2:	a1 1d       	adc	r26, r1
 9a4:	20 d0       	rcall	.+64     	; 0x9e6 <__ultoa_invert+0x84>
 9a6:	09 f4       	brne	.+2      	; 0x9aa <__ultoa_invert+0x48>
 9a8:	68 94       	set
 9aa:	3f 91       	pop	r19
 9ac:	2a e0       	ldi	r18, 0x0A	; 10
 9ae:	26 9f       	mul	r18, r22
 9b0:	11 24       	eor	r1, r1
 9b2:	30 19       	sub	r19, r0
 9b4:	30 5d       	subi	r19, 0xD0	; 208
 9b6:	31 93       	st	Z+, r19
 9b8:	de f6       	brtc	.-74     	; 0x970 <__ultoa_invert+0xe>
 9ba:	cf 01       	movw	r24, r30
 9bc:	08 95       	ret
 9be:	46 2f       	mov	r20, r22
 9c0:	47 70       	andi	r20, 0x07	; 7
 9c2:	40 5d       	subi	r20, 0xD0	; 208
 9c4:	41 93       	st	Z+, r20
 9c6:	b3 e0       	ldi	r27, 0x03	; 3
 9c8:	0f d0       	rcall	.+30     	; 0x9e8 <__ultoa_invert+0x86>
 9ca:	c9 f7       	brne	.-14     	; 0x9be <__ultoa_invert+0x5c>
 9cc:	f6 cf       	rjmp	.-20     	; 0x9ba <__ultoa_invert+0x58>
 9ce:	46 2f       	mov	r20, r22
 9d0:	4f 70       	andi	r20, 0x0F	; 15
 9d2:	40 5d       	subi	r20, 0xD0	; 208
 9d4:	4a 33       	cpi	r20, 0x3A	; 58
 9d6:	18 f0       	brcs	.+6      	; 0x9de <__ultoa_invert+0x7c>
 9d8:	49 5d       	subi	r20, 0xD9	; 217
 9da:	31 fd       	sbrc	r19, 1
 9dc:	40 52       	subi	r20, 0x20	; 32
 9de:	41 93       	st	Z+, r20
 9e0:	02 d0       	rcall	.+4      	; 0x9e6 <__ultoa_invert+0x84>
 9e2:	a9 f7       	brne	.-22     	; 0x9ce <__ultoa_invert+0x6c>
 9e4:	ea cf       	rjmp	.-44     	; 0x9ba <__ultoa_invert+0x58>
 9e6:	b4 e0       	ldi	r27, 0x04	; 4
 9e8:	a6 95       	lsr	r26
 9ea:	97 95       	ror	r25
 9ec:	87 95       	ror	r24
 9ee:	77 95       	ror	r23
 9f0:	67 95       	ror	r22
 9f2:	ba 95       	dec	r27
 9f4:	c9 f7       	brne	.-14     	; 0x9e8 <__ultoa_invert+0x86>
 9f6:	00 97       	sbiw	r24, 0x00	; 0
 9f8:	61 05       	cpc	r22, r1
 9fa:	71 05       	cpc	r23, r1
 9fc:	08 95       	ret
 9fe:	9b 01       	movw	r18, r22
 a00:	ac 01       	movw	r20, r24
 a02:	0a 2e       	mov	r0, r26
 a04:	06 94       	lsr	r0
 a06:	57 95       	ror	r21
 a08:	47 95       	ror	r20
 a0a:	37 95       	ror	r19
 a0c:	27 95       	ror	r18
 a0e:	ba 95       	dec	r27
 a10:	c9 f7       	brne	.-14     	; 0xa04 <__ultoa_invert+0xa2>
 a12:	62 0f       	add	r22, r18
 a14:	73 1f       	adc	r23, r19
 a16:	84 1f       	adc	r24, r20
 a18:	95 1f       	adc	r25, r21
 a1a:	a0 1d       	adc	r26, r0
 a1c:	08 95       	ret

00000a1e <_exit>:
 a1e:	f8 94       	cli

00000a20 <__stop_program>:
 a20:	ff cf       	rjmp	.-2      	; 0xa20 <__stop_program>
